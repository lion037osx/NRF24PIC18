

Microchip Technology PIC18 LITE Macro Assembler V1.21 build 54009 
                                                                                               Fri Nov 16 05:33:49 2018

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    32  0000                     
    33                           	psect	idataCOMRAM
    34  000A86                     __pidataCOMRAM:
    35                           	opt stack 0
    36                           
    37                           ;initializer for _ADDRESS_DATA_PIPE0
    38  000A86  05                 	db	5
    39  000A87  04                 	db	4
    40  000A88  03                 	db	3
    41  000A89  02                 	db	2
    42  000A8A  01                 	db	1
    43  0000                     _BAUDCONbits	set	4024
    44  0000                     _LATCbits	set	3979
    45  0000                     _OSCCON	set	4051
    46  0000                     _OSCTUNEbits	set	3995
    47  0000                     _PIR1bits	set	3998
    48  0000                     _PORTA	set	3968
    49  0000                     _PORTB	set	3969
    50  0000                     _PORTC	set	3970
    51  0000                     _PORTD	set	3971
    52  0000                     _PORTE	set	3972
    53  0000                     _RCSTAbits	set	4011
    54  0000                     _SPBRG	set	4015
    55  0000                     _SSPBUF	set	4041
    56  0000                     _SSPCON1	set	4038
    57  0000                     _SSPCON1bits	set	4038
    58  0000                     _SSPSTAT	set	4039
    59  0000                     _SSPSTATbits	set	4039
    60  0000                     _TRISA	set	3986
    61  0000                     _TRISAbits	set	3986
    62  0000                     _TRISB	set	3987
    63  0000                     _TRISC	set	3988
    64  0000                     _TRISCbits	set	3988
    65  0000                     _TRISD	set	3989
    66  0000                     _TRISE	set	3990
    67  0000                     _TXREG	set	4013
    68  0000                     _TXSTA	set	4012
    69  0000                     _TXSTAbits	set	4012
    70                           
    71                           	psect	smallconst
    72  000600                     __psmallconst:
    73                           	opt stack 0
    74  000600                     __stringdata:
    75                           	opt stack 0
    76  000600                     STR_1:
    77  000600  20                 	db	32
    78  000601  50                 	db	80	;'P'
    79  000602  49                 	db	73	;'I'
    80  000603  43                 	db	67	;'C'
    81  000604  20                 	db	32
    82  000605  31                 	db	49	;'1'
    83  000606  38                 	db	56	;'8'
    84  000607  46                 	db	70	;'F'
    85  000608  34                 	db	52	;'4'
    86  000609  78                 	db	120	;'x'
    87  00060A  78                 	db	120	;'x'
    88  00060B  78                 	db	120	;'x'
    89  00060C  20                 	db	32
    90  00060D  20                 	db	32
    91  00060E  2B                 	db	43
    92  00060F  20                 	db	32
    93  000610  4E                 	db	78	;'N'
    94  000611  52                 	db	82	;'R'
    95  000612  46                 	db	70	;'F'
    96  000613  32                 	db	50	;'2'
    97  000614  34                 	db	52	;'4'
    98  000615  4C                 	db	76	;'L'
    99  000616  30                 	db	48	;'0'
   100  000617  31                 	db	49	;'1'
   101  000618  20                 	db	32
   102  000619  4D                 	db	77	;'M'
   103  00061A  4F                 	db	79	;'O'
   104  00061B  44                 	db	68	;'D'
   105  00061C  45                 	db	69	;'E'
   106  00061D  20                 	db	32
   107  00061E  52                 	db	82	;'R'
   108  00061F  58                 	db	88	;'X'
   109  000620  20                 	db	32
   110  000621  0D                 	db	13
   111  000622  0A                 	db	10
   112  000623  00                 	db	0
   113  000624                     __end_of__stringdata:
   114                           	opt stack 0
   115                           
   116                           ; #config settings
   117  000624  00                 	db	0	; dummy byte at the end
   118  0000                     
   119                           	psect	cinit
   120  000970                     __pcinit:
   121                           	opt stack 0
   122  000970                     start_initialization:
   123                           	opt stack 0
   124  000970                     __initialization:
   125                           	opt stack 0
   126                           
   127                           ; Initialize objects allocated to COMRAM (5 bytes)
   128                           ; load TBLPTR registers with __pidataCOMRAM
   129  000970  0E86               	movlw	low __pidataCOMRAM
   130  000972  6EF6               	movwf	tblptrl,c
   131  000974  0E0A               	movlw	high __pidataCOMRAM
   132  000976  6EF7               	movwf	tblptrh,c
   133  000978  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   134  00097A  6EF8               	movwf	tblptru,c
   135  00097C  EE00  F050         	lfsr	0,__pdataCOMRAM
   136  000980  EE10 F005          	lfsr	1,5
   137  000984                     copy_data0:
   138  000984  0009               	tblrd		*+
   139  000986  CFF5 FFEE          	movff	tablat,postinc0
   140  00098A  50E5               	movf	postdec1,w,c
   141  00098C  50E1               	movf	fsr1l,w,c
   142  00098E  E1FA               	bnz	copy_data0
   143  000990                     end_of_initialization:
   144                           	opt stack 0
   145  000990                     __end_of__initialization:
   146                           	opt stack 0
   147  000990  0E00               	movlw	low (__Lmediumconst shr (0+16))
   148  000992  6EF8               	movwf	tblptru,c
   149  000994  0100               	movlb	0
   150  000996  EF9A  F003         	goto	_main	;jump to C main() function
   151                           tblptru	equ	0xFF8
   152                           tblptrh	equ	0xFF7
   153                           tblptrl	equ	0xFF6
   154                           tablat	equ	0xFF5
   155                           postinc0	equ	0xFEE
   156                           postdec1	equ	0xFE5
   157                           fsr1l	equ	0xFE1
   158                           
   159                           	psect	dataCOMRAM
   160  000050                     __pdataCOMRAM:
   161                           	opt stack 0
   162  000050                     _ADDRESS_DATA_PIPE0:
   163                           	opt stack 0
   164  000050                     	ds	5
   165                           tblptru	equ	0xFF8
   166                           tblptrh	equ	0xFF7
   167                           tblptrl	equ	0xFF6
   168                           tablat	equ	0xFF5
   169                           postinc0	equ	0xFEE
   170                           postdec1	equ	0xFE5
   171                           fsr1l	equ	0xFE1
   172                           
   173                           	psect	cstackCOMRAM
   174  000001                     __pcstackCOMRAM:
   175                           	opt stack 0
   176  000001                     ?_Delay_ms:
   177                           	opt stack 0
   178  000001                     ?_SPI_Write:
   179                           	opt stack 0
   180  000001                     ?_UARTPutChar:
   181                           	opt stack 0
   182  000001                     ?_strcpy:
   183                           	opt stack 0
   184  000001                     SPI_Write@data:
   185                           	opt stack 0
   186  000001                     UARTPutChar@Dato:
   187                           	opt stack 0
   188  000001                     Delay_ms@count:
   189                           	opt stack 0
   190  000001                     strcpy@to:
   191                           	opt stack 0
   192                           
   193                           ; 2 bytes @ 0x0
   194  000001                     	ds	1
   195  000002                     ?_UART_String:
   196                           	opt stack 0
   197  000002                     ??_NRF24L01_Flush:
   198  000002                     ?_NRF24L01_WriteRegister:
   199                           	opt stack 0
   200  000002                     ?_NRF24L01_WriteBuffer:
   201                           	opt stack 0
   202  000002                     ?_NRF24L01_ReadBuffer:
   203                           	opt stack 0
   204  000002                     ?_NRF24L01_ReadRegister:
   205                           	opt stack 0
   206  000002                     NRF24L01_WriteRegister@Mnemonic:
   207                           	opt stack 0
   208  000002                     NRF24L01_ReadRegister@Mnemonic:
   209                           	opt stack 0
   210  000002                     NRF24L01_WriteBuffer@data:
   211                           	opt stack 0
   212  000002                     NRF24L01_ReadBuffer@data:
   213                           	opt stack 0
   214  000002                     UART_String@_string:
   215                           	opt stack 0
   216                           
   217                           ; 2 bytes @ 0x1
   218  000002                     	ds	1
   219  000003                     NRF24L01_WriteRegister@value:
   220                           	opt stack 0
   221  000003                     NRF24L01_ReadRegister@byte0:
   222                           	opt stack 0
   223  000003                     NRF24L01_WriteBuffer@buffer:
   224                           	opt stack 0
   225  000003                     NRF24L01_ReadBuffer@buffer:
   226                           	opt stack 0
   227  000003                     Delay_ms@i:
   228                           	opt stack 0
   229  000003                     strcpy@from:
   230                           	opt stack 0
   231                           
   232                           ; 2 bytes @ 0x2
   233  000003                     	ds	1
   234  000004                     ??_NRF24L01_DataReady:
   235  000004                     ?_NRF24L01_SetChannel:
   236                           	opt stack 0
   237  000004                     ?_NRF24L01_SetMode:
   238                           	opt stack 0
   239  000004                     NRF24L01_SetMode@mode:
   240                           	opt stack 0
   241  000004                     NRF24L01_SetChannel@rf_channel:
   242                           	opt stack 0
   243                           
   244                           ; 1 bytes @ 0x3
   245  000004                     	ds	1
   246  000005                     ??_NRF24L01_SetChannel:
   247  000005                     ??_NRF24L01_SetMode:
   248  000005                     NRF24L01_WriteBuffer@bytes:
   249                           	opt stack 0
   250  000005                     NRF24L01_ReadBuffer@bytes:
   251                           	opt stack 0
   252  000005                     strcpy@cp:
   253                           	opt stack 0
   254                           
   255                           ; 2 bytes @ 0x4
   256  000005                     	ds	1
   257  000006                     ??_NRF24L01_WriteBuffer:
   258  000006                     ??_NRF24L01_ReadBuffer:
   259                           
   260                           ; 0 bytes @ 0x5
   261  000006                     	ds	1
   262  000007                     NRF24L01_WriteBuffer@i:
   263                           	opt stack 0
   264  000007                     NRF24L01_ReadBuffer@i:
   265                           	opt stack 0
   266                           
   267                           ; 1 bytes @ 0x6
   268  000007                     	ds	1
   269  000008                     ?_NRF24L01_Init:
   270                           	opt stack 0
   271  000008                     ?_NRF24L01_ReadData:
   272                           	opt stack 0
   273  000008                     NRF24L01_Init@mode:
   274                           	opt stack 0
   275  000008                     NRF24L01_ReadData@buffer:
   276                           	opt stack 0
   277                           
   278                           ; 2 bytes @ 0x7
   279  000008                     	ds	1
   280  000009                     NRF24L01_Init@rf_channel:
   281                           	opt stack 0
   282                           
   283                           ; 1 bytes @ 0x8
   284  000009                     	ds	1
   285  00000A                     ??_NRF24L01_Init:
   286  00000A                     ??_NRF24L01_ReadData:
   287                           
   288                           ; 0 bytes @ 0x9
   289  00000A                     	ds	2
   290  00000C                     ??_main:
   291                           
   292                           ; 0 bytes @ 0xB
   293  00000C                     	ds	4
   294  000010                     main@bufferRX_TMP:
   295                           	opt stack 0
   296                           
   297                           ; 32 bytes @ 0xF
   298  000010                     	ds	32
   299  000030                     main@bufferRX:
   300                           	opt stack 0
   301                           
   302                           ; 32 bytes @ 0x2F
   303  000030                     	ds	32
   304                           tblptru	equ	0xFF8
   305                           tblptrh	equ	0xFF7
   306                           tblptrl	equ	0xFF6
   307                           tablat	equ	0xFF5
   308                           postinc0	equ	0xFEE
   309                           postdec1	equ	0xFE5
   310                           fsr1l	equ	0xFE1
   311                           
   312 ;;
   313 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   314 ;;
   315 ;; *************** function _main *****************
   316 ;; Defined at:
   317 ;;		line 37 in file "main.c"
   318 ;; Parameters:    Size  Location     Type
   319 ;;		None
   320 ;; Auto vars:     Size  Location     Type
   321 ;;  bufferRX       32   47[COMRAM] unsigned char [32]
   322 ;;  bufferRX_TMP   32   15[COMRAM] unsigned char [32]
   323 ;; Return value:  Size  Location     Type
   324 ;;		None               void
   325 ;; Registers used:
   326 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   327 ;; Tracked objects:
   328 ;;		On entry : 0/0
   329 ;;		On exit  : 0/0
   330 ;;		Unchanged: 0/0
   331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   332 ;;      Params:         0       0       0       0       0       0       0
   333 ;;      Locals:        64       0       0       0       0       0       0
   334 ;;      Temps:          4       0       0       0       0       0       0
   335 ;;      Totals:        68       0       0       0       0       0       0
   336 ;;Total ram usage:       68 bytes
   337 ;; Hardware stack levels required when called:    4
   338 ;; This function calls:
   339 ;;		_UARTInit
   340 ;;		_UART_String
   341 ;;		_SPI_Close
   342 ;;		_SPI_Init
   343 ;;		_NRF24L01_Init
   344 ;;		_NRF24L01_DataReady
   345 ;;		_NRF24L01_ReadData
   346 ;;		_strcpy
   347 ;; This function is called by:
   348 ;;		Startup code after reset
   349 ;; This function uses a non-reentrant model
   350 ;;
   351                           
   352                           	psect	text0
   353  000734                     __ptext0:
   354                           	opt stack 0
   355  000734                     _main:
   356                           	opt stack 27
   357                           
   358                           ;main.c: 38: unsigned char bufferRX[32];
   359                           ;main.c: 39: unsigned char bufferRX_TMP[32];
   360                           ;main.c: 40: OSCCON = 0b01110000;
   361                           
   362                           ;incstack = 0
   363                           ;incstack = 0
   364  000734  0E70               	movlw	112
   365  000736  6ED3               	movwf	4051,c	;volatile
   366                           
   367                           ;main.c: 41: OSCTUNEbits.PLLEN = 1;
   368  000738  8C9B               	bsf	3995,6,c	;volatile
   369                           
   370                           ;main.c: 43: PORTA=PORTB=PORTC=PORTD=PORTE=0;
   371  00073A  0E00               	movlw	0
   372  00073C  6E84               	movwf	3972,c	;volatile
   373  00073E  CF84 FF83          	movff	3972,3971	;volatile
   374  000742  CF83 FF82          	movff	3971,3970	;volatile
   375  000746  CF82 FF81          	movff	3970,3969	;volatile
   376  00074A  CF81 FF80          	movff	3969,3968	;volatile
   377                           
   378                           ;main.c: 44: TRISA=TRISB=TRISC=TRISD=TRISE=0;
   379  00074E  0E00               	movlw	0
   380  000750  6E96               	movwf	3990,c	;volatile
   381  000752  CF96 FF95          	movff	3990,3989	;volatile
   382  000756  CF95 FF94          	movff	3989,3988	;volatile
   383  00075A  CF94 FF93          	movff	3988,3987	;volatile
   384  00075E  CF93 FF92          	movff	3987,3986	;volatile
   385                           
   386                           ;main.c: 45: UARTInit();
   387  000762  EC27  F005         	call	_UARTInit	;wreg free
   388                           
   389                           ;main.c: 46: UART_String((char *)" PIC 18F4xxx  + NRF24L01 MODE RX \r\n");
   390  000766  0E06               	movlw	high STR_1
   391  000768  6E03               	movwf	?_UART_String+1,c
   392  00076A  0E00               	movlw	low STR_1
   393  00076C  6E02               	movwf	?_UART_String,c
   394  00076E  EC25  F004         	call	_UART_String	;wreg free
   395                           
   396                           ;main.c: 47: SPI_Close();
   397  000772  EC46  F005         	call	_SPI_Close	;wreg free
   398                           
   399                           ;main.c: 48: SPI_Init();
   400  000776  EC14  F005         	call	_SPI_Init	;wreg free
   401                           
   402                           ;main.c: 49: NRF24L01_Init(1, 0x40);
   403  00077A  6E0C               	movwf	??_main& (0+255),c
   404  00077C  0E01               	movlw	1
   405  00077E  6E08               	movwf	?_NRF24L01_Init,c
   406  000780  500C               	movf	??_main& (0+255),w,c
   407  000782  6E0D               	movwf	(??_main+1)& (0+255),c
   408  000784  0E40               	movlw	64
   409  000786  6E09               	movwf	?_NRF24L01_Init+1,c
   410  000788  500D               	movf	(??_main+1)& (0+255),w,c
   411  00078A  EC13  F003         	call	_NRF24L01_Init	;wreg free
   412  00078E                     l995:
   413  00078E  ECF0  F004         	call	_NRF24L01_DataReady	;wreg free
   414  000792  0900               	iorlw	0
   415  000794  A4D8               	btfss	status,2,c
   416  000796  D7FB               	goto	l995
   417                           
   418                           ;main.c: 53: NRF24L01_ReadData(bufferRX);
   419  000798  0E00               	movlw	high main@bufferRX
   420  00079A  6E09               	movwf	?_NRF24L01_ReadData+1,c
   421  00079C  0E30               	movlw	low main@bufferRX
   422  00079E  6E08               	movwf	?_NRF24L01_ReadData,c
   423  0007A0  EC6B  F004         	call	_NRF24L01_ReadData	;wreg free
   424                           
   425                           ;main.c: 54: PORTA = bufferRX[0];
   426  0007A4  C030  FF80         	movff	main@bufferRX,3968	;volatile
   427                           
   428                           ;main.c: 55: if((bufferRX[0]!=0) && (bufferRX!=bufferRX_TMP)){
   429  0007A8  5030               	movf	main@bufferRX,w,c
   430  0007AA  B4D8               	btfsc	status,2,c
   431  0007AC  D7F0               	goto	l995
   432  0007AE  0E10               	movlw	low main@bufferRX_TMP
   433  0007B0  6E0C               	movwf	??_main& (0+255),c
   434  0007B2  0E00               	movlw	high main@bufferRX_TMP
   435  0007B4  6E0D               	movwf	(??_main+1)& (0+255),c
   436  0007B6  0E30               	movlw	low main@bufferRX
   437  0007B8  6E0E               	movwf	(??_main+2)& (0+255),c
   438  0007BA  0E00               	movlw	high main@bufferRX
   439  0007BC  6E0F               	movwf	(??_main+3)& (0+255),c
   440  0007BE  500D               	movf	??_main+1,w,c
   441  0007C0  180F               	xorwf	??_main+3,w,c
   442  0007C2  E102               	bnz	u175
   443  0007C4  500C               	movf	??_main,w,c
   444  0007C6  180E               	xorwf	??_main+2,w,c
   445  0007C8                     u175:
   446  0007C8  B4D8               	btfsc	status,2,c
   447  0007CA  D7E1               	goto	l995
   448                           
   449                           ;main.c: 56: UART_String((char *)bufferRX);
   450  0007CC  0E00               	movlw	high main@bufferRX
   451  0007CE  6E03               	movwf	?_UART_String+1,c
   452  0007D0  0E30               	movlw	low main@bufferRX
   453  0007D2  6E02               	movwf	?_UART_String,c
   454  0007D4  EC25  F004         	call	_UART_String	;wreg free
   455                           
   456                           ;main.c: 57: strcpy(bufferRX_TMP,bufferRX);
   457  0007D8  0E00               	movlw	high main@bufferRX_TMP
   458  0007DA  6E02               	movwf	?_strcpy+1,c
   459  0007DC  0E10               	movlw	low main@bufferRX_TMP
   460  0007DE  6E01               	movwf	?_strcpy,c
   461  0007E0  0E00               	movlw	high main@bufferRX
   462  0007E2  6E04               	movwf	?_strcpy+3,c
   463  0007E4  0E30               	movlw	low main@bufferRX
   464  0007E6  6E03               	movwf	?_strcpy+2,c
   465  0007E8  ECA1  F004         	call	_strcpy	;wreg free
   466  0007EC  D7D0               	goto	l995
   467  0007EE                     l50:
   468  0007EE  D7FF               	goto	l50
   469  0007F0                     __end_of_main:
   470                           	opt stack 0
   471                           tblptru	equ	0xFF8
   472                           tblptrh	equ	0xFF7
   473                           tblptrl	equ	0xFF6
   474                           tablat	equ	0xFF5
   475                           postinc0	equ	0xFEE
   476                           postdec1	equ	0xFE5
   477                           fsr1l	equ	0xFE1
   478                           status	equ	0xFD8
   479                           
   480 ;; *************** function _strcpy *****************
   481 ;; Defined at:
   482 ;;		line 10 in file "/opt/microchip/xc8/v1.21/sources/common/strcpy.c"
   483 ;; Parameters:    Size  Location     Type
   484 ;;  to              2    0[COMRAM] PTR unsigned char 
   485 ;;		 -> main@bufferRX_TMP(32), 
   486 ;;  from            2    2[COMRAM] PTR const unsigned char 
   487 ;;		 -> main@bufferRX(32), 
   488 ;; Auto vars:     Size  Location     Type
   489 ;;  cp              2    4[COMRAM] PTR unsigned char 
   490 ;;		 -> main@bufferRX_TMP(32), 
   491 ;; Return value:  Size  Location     Type
   492 ;;                  2    0[COMRAM] PTR unsigned char 
   493 ;; Registers used:
   494 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   495 ;; Tracked objects:
   496 ;;		On entry : 0/0
   497 ;;		On exit  : 0/0
   498 ;;		Unchanged: 0/0
   499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   500 ;;      Params:         4       0       0       0       0       0       0
   501 ;;      Locals:         2       0       0       0       0       0       0
   502 ;;      Temps:          0       0       0       0       0       0       0
   503 ;;      Totals:         6       0       0       0       0       0       0
   504 ;;Total ram usage:        6 bytes
   505 ;; Hardware stack levels used:    1
   506 ;; This function calls:
   507 ;;		Nothing
   508 ;; This function is called by:
   509 ;;		_main
   510 ;; This function uses a non-reentrant model
   511 ;;
   512                           
   513                           	psect	text1
   514  000942                     __ptext1:
   515                           	opt stack 0
   516  000942                     _strcpy:
   517                           	opt stack 30
   518                           
   519                           ;incstack = 0
   520                           ;incstack = 0
   521  000942  C001  F005         	movff	strcpy@to,strcpy@cp
   522  000946  C002  F006         	movff	strcpy@to+1,strcpy@cp+1
   523  00094A  D004               	goto	l825
   524  00094C                     l823:
   525  00094C  4A05               	infsnz	strcpy@cp,f,c
   526  00094E  2A06               	incf	strcpy@cp+1,f,c
   527  000950  4A03               	infsnz	strcpy@from,f,c
   528  000952  2A04               	incf	strcpy@from+1,f,c
   529  000954                     l825:
   530  000954  C003  FFD9         	movff	strcpy@from,fsr2l
   531  000958  C004  FFDA         	movff	strcpy@from+1,fsr2h
   532  00095C  C005  FFE1         	movff	strcpy@cp,fsr1l
   533  000960  C006  FFE2         	movff	strcpy@cp+1,fsr1h
   534  000964  CFDF FFE7          	movff	indf2,indf1
   535  000968  50E7               	movf	indf1,w,c
   536  00096A  B4D8               	btfsc	status,2,c
   537                           
   538                           ;	Return value of _strcpy is never used
   539  00096C  0012               	return	
   540  00096E  D7EE               	goto	l823
   541  000970                     __end_of_strcpy:
   542                           	opt stack 0
   543                           tblptru	equ	0xFF8
   544                           tblptrh	equ	0xFF7
   545                           tblptrl	equ	0xFF6
   546                           tablat	equ	0xFF5
   547                           postinc0	equ	0xFEE
   548                           indf1	equ	0xFE7
   549                           postdec1	equ	0xFE5
   550                           fsr1h	equ	0xFE2
   551                           fsr1l	equ	0xFE1
   552                           indf2	equ	0xFDF
   553                           fsr2h	equ	0xFDA
   554                           fsr2l	equ	0xFD9
   555                           status	equ	0xFD8
   556                           
   557 ;; *************** function _NRF24L01_ReadData *****************
   558 ;; Defined at:
   559 ;;		line 107 in file "nrf24l01.c"
   560 ;; Parameters:    Size  Location     Type
   561 ;;  buffer          2    7[COMRAM] PTR unsigned char 
   562 ;;		 -> main@bufferRX(32), 
   563 ;; Auto vars:     Size  Location     Type
   564 ;;		None
   565 ;; Return value:  Size  Location     Type
   566 ;;		None               void
   567 ;; Registers used:
   568 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   569 ;; Tracked objects:
   570 ;;		On entry : 0/0
   571 ;;		On exit  : 0/0
   572 ;;		Unchanged: 0/0
   573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   574 ;;      Params:         2       0       0       0       0       0       0
   575 ;;      Locals:         0       0       0       0       0       0       0
   576 ;;      Temps:          2       0       0       0       0       0       0
   577 ;;      Totals:         4       0       0       0       0       0       0
   578 ;;Total ram usage:        4 bytes
   579 ;; Hardware stack levels used:    1
   580 ;; Hardware stack levels required when called:    2
   581 ;; This function calls:
   582 ;;		_NRF24L01_WriteRegister
   583 ;;		_NRF24L01_ReadBuffer
   584 ;;		_NRF24L01_Flush
   585 ;; This function is called by:
   586 ;;		_main
   587 ;; This function uses a non-reentrant model
   588 ;;
   589                           
   590                           	psect	text2
   591  0008D6                     __ptext2:
   592                           	opt stack 0
   593  0008D6                     _NRF24L01_ReadData:
   594                           	opt stack 28
   595                           
   596                           ;nrf24l01.c: 108: NRF24L01_ReadBuffer(0x61, buffer, 5);
   597                           
   598                           ;incstack = 0
   599                           ;incstack = 0
   600  0008D6  6E0A               	movwf	??_NRF24L01_ReadData& (0+255),c
   601  0008D8  0E61               	movlw	97
   602  0008DA  6E02               	movwf	?_NRF24L01_ReadBuffer,c
   603  0008DC  500A               	movf	??_NRF24L01_ReadData& (0+255),w,c
   604  0008DE  C008  F003         	movff	NRF24L01_ReadData@buffer,?_NRF24L01_ReadBuffer+1
   605  0008E2  C009  F004         	movff	NRF24L01_ReadData@buffer+1,?_NRF24L01_ReadBuffer+2
   606  0008E6  6E0B               	movwf	(??_NRF24L01_ReadData+1)& (0+255),c
   607  0008E8  0E05               	movlw	5
   608  0008EA  6E05               	movwf	?_NRF24L01_ReadBuffer+3,c
   609  0008EC  500B               	movf	(??_NRF24L01_ReadData+1)& (0+255),w,c
   610  0008EE  EC4B  F004         	call	_NRF24L01_ReadBuffer	;wreg free
   611                           
   612                           ;nrf24l01.c: 109: NRF24L01_WriteRegister(0x07, 0x70);
   613  0008F2  6E0A               	movwf	??_NRF24L01_ReadData& (0+255),c
   614  0008F4  0E07               	movlw	7
   615  0008F6  6E02               	movwf	?_NRF24L01_WriteRegister,c
   616  0008F8  500A               	movf	??_NRF24L01_ReadData& (0+255),w,c
   617  0008FA  6E0B               	movwf	(??_NRF24L01_ReadData+1)& (0+255),c
   618  0008FC  0E70               	movlw	112
   619  0008FE  6E03               	movwf	?_NRF24L01_WriteRegister+1,c
   620  000900  500B               	movf	(??_NRF24L01_ReadData+1)& (0+255),w,c
   621  000902  ECFD  F004         	call	_NRF24L01_WriteRegister	;wreg free
   622                           
   623                           ;nrf24l01.c: 110: NRF24L01_Flush();
   624  000906  ECDF  F004         	call	_NRF24L01_Flush	;wreg free
   625  00090A  0012               	return	
   626  00090C                     __end_of_NRF24L01_ReadData:
   627                           	opt stack 0
   628                           tblptru	equ	0xFF8
   629                           tblptrh	equ	0xFF7
   630                           tblptrl	equ	0xFF6
   631                           tablat	equ	0xFF5
   632                           postinc0	equ	0xFEE
   633                           indf1	equ	0xFE7
   634                           postdec1	equ	0xFE5
   635                           fsr1h	equ	0xFE2
   636                           fsr1l	equ	0xFE1
   637                           indf2	equ	0xFDF
   638                           fsr2h	equ	0xFDA
   639                           fsr2l	equ	0xFD9
   640                           status	equ	0xFD8
   641                           
   642 ;; *************** function _NRF24L01_ReadBuffer *****************
   643 ;; Defined at:
   644 ;;		line 42 in file "nrf24l01.c"
   645 ;; Parameters:    Size  Location     Type
   646 ;;  data            1    1[COMRAM] unsigned char 
   647 ;;  buffer          2    2[COMRAM] PTR unsigned char 
   648 ;;		 -> main@bufferRX(32), 
   649 ;;  bytes           1    4[COMRAM] unsigned char 
   650 ;; Auto vars:     Size  Location     Type
   651 ;;  i               1    6[COMRAM] unsigned char 
   652 ;; Return value:  Size  Location     Type
   653 ;;		None               void
   654 ;; Registers used:
   655 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   656 ;; Tracked objects:
   657 ;;		On entry : 0/0
   658 ;;		On exit  : 0/0
   659 ;;		Unchanged: 0/0
   660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   661 ;;      Params:         4       0       0       0       0       0       0
   662 ;;      Locals:         1       0       0       0       0       0       0
   663 ;;      Temps:          1       0       0       0       0       0       0
   664 ;;      Totals:         6       0       0       0       0       0       0
   665 ;;Total ram usage:        6 bytes
   666 ;; Hardware stack levels used:    1
   667 ;; Hardware stack levels required when called:    1
   668 ;; This function calls:
   669 ;;		_SPI_Write
   670 ;;		_SPI1_Read
   671 ;; This function is called by:
   672 ;;		_NRF24L01_ReadData
   673 ;; This function uses a non-reentrant model
   674 ;;
   675                           
   676                           	psect	text3
   677  000896                     __ptext3:
   678                           	opt stack 0
   679  000896                     _NRF24L01_ReadBuffer:
   680                           	opt stack 28
   681                           
   682                           ;nrf24l01.c: 43: unsigned char i;
   683                           ;nrf24l01.c: 44: LATCbits.LATC1 = 0;
   684                           
   685                           ;incstack = 0
   686                           ;incstack = 0
   687  000896  928B               	bcf	3979,1,c	;volatile
   688                           
   689                           ;nrf24l01.c: 45: SPI_Write(data);
   690  000898  C002  F001         	movff	NRF24L01_ReadBuffer@data,?_SPI_Write
   691  00089C  EC30  F005         	call	_SPI_Write	;wreg free
   692                           
   693                           ;nrf24l01.c: 46: for(i = 0; i < bytes; i++)
   694  0008A0  6E06               	movwf	??_NRF24L01_ReadBuffer& (0+255),c
   695  0008A2  0E00               	movlw	0
   696  0008A4  6E07               	movwf	NRF24L01_ReadBuffer@i,c
   697  0008A6  5006               	movf	??_NRF24L01_ReadBuffer& (0+255),w,c
   698  0008A8  D00A               	goto	l917
   699  0008AA                     l911:
   700                           
   701                           ;nrf24l01.c: 47: {
   702                           ;nrf24l01.c: 48: *buffer = SPI1_Read();
   703  0008AA  EC37  F005         	call	_SPI1_Read	;wreg free
   704  0008AE  C003  FFD9         	movff	NRF24L01_ReadBuffer@buffer,fsr2l
   705  0008B2  C004  FFDA         	movff	NRF24L01_ReadBuffer@buffer+1,fsr2h
   706  0008B6  6EDF               	movwf	indf2,c
   707                           
   708                           ;nrf24l01.c: 49: buffer++;
   709  0008B8  4A03               	infsnz	NRF24L01_ReadBuffer@buffer,f,c
   710  0008BA  2A04               	incf	NRF24L01_ReadBuffer@buffer+1,f,c
   711  0008BC  2A07               	incf	NRF24L01_ReadBuffer@i,f,c
   712  0008BE                     l917:
   713  0008BE  5005               	movf	NRF24L01_ReadBuffer@bytes,w,c
   714  0008C0  5C07               	subwf	NRF24L01_ReadBuffer@i,w,c
   715  0008C2  A0D8               	btfss	status,0,c
   716  0008C4  D7F2               	goto	l911
   717                           
   718                           ;nrf24l01.c: 50: }
   719                           ;nrf24l01.c: 51: *buffer = (0);
   720  0008C6  C003  FFD9         	movff	NRF24L01_ReadBuffer@buffer,fsr2l
   721  0008CA  C004  FFDA         	movff	NRF24L01_ReadBuffer@buffer+1,fsr2h
   722  0008CE  0E00               	movlw	0
   723  0008D0  6EDF               	movwf	indf2,c
   724                           
   725                           ;nrf24l01.c: 53: LATCbits.LATC1 = 1;
   726  0008D2  828B               	bsf	3979,1,c	;volatile
   727  0008D4  0012               	return	
   728  0008D6                     __end_of_NRF24L01_ReadBuffer:
   729                           	opt stack 0
   730                           tblptru	equ	0xFF8
   731                           tblptrh	equ	0xFF7
   732                           tblptrl	equ	0xFF6
   733                           tablat	equ	0xFF5
   734                           postinc0	equ	0xFEE
   735                           indf1	equ	0xFE7
   736                           postdec1	equ	0xFE5
   737                           fsr1h	equ	0xFE2
   738                           fsr1l	equ	0xFE1
   739                           indf2	equ	0xFDF
   740                           fsr2h	equ	0xFDA
   741                           fsr2l	equ	0xFD9
   742                           status	equ	0xFD8
   743                           
   744 ;; *************** function _NRF24L01_DataReady *****************
   745 ;; Defined at:
   746 ;;		line 99 in file "nrf24l01.c"
   747 ;; Parameters:    Size  Location     Type
   748 ;;		None
   749 ;; Auto vars:     Size  Location     Type
   750 ;;		None
   751 ;; Return value:  Size  Location     Type
   752 ;;                  1    wreg      unsigned char 
   753 ;; Registers used:
   754 ;;		wreg, status,2, status,0, cstack
   755 ;; Tracked objects:
   756 ;;		On entry : 0/0
   757 ;;		On exit  : 0/0
   758 ;;		Unchanged: 0/0
   759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   760 ;;      Params:         0       0       0       0       0       0       0
   761 ;;      Locals:         0       0       0       0       0       0       0
   762 ;;      Temps:          2       0       0       0       0       0       0
   763 ;;      Totals:         2       0       0       0       0       0       0
   764 ;;Total ram usage:        2 bytes
   765 ;; Hardware stack levels used:    1
   766 ;; Hardware stack levels required when called:    2
   767 ;; This function calls:
   768 ;;		_NRF24L01_ReadRegister
   769 ;; This function is called by:
   770 ;;		_main
   771 ;; This function uses a non-reentrant model
   772 ;;
   773                           
   774                           	psect	text4
   775  0009E0                     __ptext4:
   776                           	opt stack 0
   777  0009E0                     _NRF24L01_DataReady:
   778                           	opt stack 28
   779                           
   780                           ;nrf24l01.c: 100: if((NRF24L01_ReadRegister(0x07) & 0x40) == 0x40)
   781                           
   782                           ;incstack = 0
   783                           ;incstack = 0
   784  0009E0  6E04               	movwf	??_NRF24L01_DataReady& (0+255),c
   785  0009E2  0E07               	movlw	7
   786  0009E4  6E02               	movwf	?_NRF24L01_ReadRegister,c
   787  0009E6  5004               	movf	??_NRF24L01_DataReady& (0+255),w,c
   788  0009E8  EC09  F005         	call	_NRF24L01_ReadRegister	;wreg free
   789  0009EC  6E05               	movwf	(??_NRF24L01_DataReady+1)& (0+255),c
   790  0009EE  AC05               	btfss	??_NRF24L01_DataReady+1,6,c
   791  0009F0  D002               	goto	l945
   792                           
   793                           ;nrf24l01.c: 101: {
   794                           ;nrf24l01.c: 102: return 0;
   795  0009F2  0E00               	movlw	0
   796  0009F4  D001               	goto	l147
   797  0009F6                     l945:
   798                           
   799                           ;nrf24l01.c: 103: }
   800                           ;nrf24l01.c: 104: return 1;
   801  0009F6  0E01               	movlw	1
   802  0009F8                     l147:
   803  0009F8  0012               	return	
   804  0009FA                     __end_of_NRF24L01_DataReady:
   805                           	opt stack 0
   806                           tblptru	equ	0xFF8
   807                           tblptrh	equ	0xFF7
   808                           tblptrl	equ	0xFF6
   809                           tablat	equ	0xFF5
   810                           postinc0	equ	0xFEE
   811                           indf1	equ	0xFE7
   812                           postdec1	equ	0xFE5
   813                           fsr1h	equ	0xFE2
   814                           fsr1l	equ	0xFE1
   815                           indf2	equ	0xFDF
   816                           fsr2h	equ	0xFDA
   817                           fsr2l	equ	0xFD9
   818                           status	equ	0xFD8
   819                           
   820 ;; *************** function _NRF24L01_ReadRegister *****************
   821 ;; Defined at:
   822 ;;		line 21 in file "nrf24l01.c"
   823 ;; Parameters:    Size  Location     Type
   824 ;;  Mnemonic        1    1[COMRAM] unsigned char 
   825 ;; Auto vars:     Size  Location     Type
   826 ;;  byte0           1    2[COMRAM] unsigned char 
   827 ;; Return value:  Size  Location     Type
   828 ;;                  1    wreg      unsigned char 
   829 ;; Registers used:
   830 ;;		wreg, status,2, cstack
   831 ;; Tracked objects:
   832 ;;		On entry : 0/0
   833 ;;		On exit  : 0/0
   834 ;;		Unchanged: 0/0
   835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   836 ;;      Params:         1       0       0       0       0       0       0
   837 ;;      Locals:         1       0       0       0       0       0       0
   838 ;;      Temps:          0       0       0       0       0       0       0
   839 ;;      Totals:         2       0       0       0       0       0       0
   840 ;;Total ram usage:        2 bytes
   841 ;; Hardware stack levels used:    1
   842 ;; Hardware stack levels required when called:    1
   843 ;; This function calls:
   844 ;;		_SPI_Write
   845 ;;		_SPI1_Read
   846 ;; This function is called by:
   847 ;;		_NRF24L01_DataReady
   848 ;;		_NRF24L01_GetChannel
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852                           	psect	text5
   853  000A12                     __ptext5:
   854                           	opt stack 0
   855  000A12                     _NRF24L01_ReadRegister:
   856                           	opt stack 28
   857                           
   858                           ;nrf24l01.c: 22: unsigned char byte0;
   859                           ;nrf24l01.c: 23: LATCbits.LATC1 = 0;
   860                           
   861                           ;incstack = 0
   862                           ;incstack = 0
   863  000A12  928B               	bcf	3979,1,c	;volatile
   864                           
   865                           ;nrf24l01.c: 24: SPI_Write(0x00 | Mnemonic);
   866  000A14  C002  F001         	movff	NRF24L01_ReadRegister@Mnemonic,?_SPI_Write
   867  000A18  EC30  F005         	call	_SPI_Write	;wreg free
   868                           
   869                           ;nrf24l01.c: 25: byte0 = SPI1_Read();
   870  000A1C  EC37  F005         	call	_SPI1_Read	;wreg free
   871  000A20  6E03               	movwf	NRF24L01_ReadRegister@byte0,c
   872                           
   873                           ;nrf24l01.c: 26: LATCbits.LATC1 = 1;
   874  000A22  828B               	bsf	3979,1,c	;volatile
   875                           
   876                           ;nrf24l01.c: 27: return byte0;
   877  000A24  5003               	movf	NRF24L01_ReadRegister@byte0,w,c
   878  000A26  0012               	return	
   879  000A28                     __end_of_NRF24L01_ReadRegister:
   880                           	opt stack 0
   881                           tblptru	equ	0xFF8
   882                           tblptrh	equ	0xFF7
   883                           tblptrl	equ	0xFF6
   884                           tablat	equ	0xFF5
   885                           postinc0	equ	0xFEE
   886                           indf1	equ	0xFE7
   887                           postdec1	equ	0xFE5
   888                           fsr1h	equ	0xFE2
   889                           fsr1l	equ	0xFE1
   890                           indf2	equ	0xFDF
   891                           fsr2h	equ	0xFDA
   892                           fsr2l	equ	0xFD9
   893                           status	equ	0xFD8
   894                           
   895 ;; *************** function _SPI1_Read *****************
   896 ;; Defined at:
   897 ;;		line 51 in file "spi_pic18f.c"
   898 ;; Parameters:    Size  Location     Type
   899 ;;		None
   900 ;; Auto vars:     Size  Location     Type
   901 ;;		None
   902 ;; Return value:  Size  Location     Type
   903 ;;                  1    wreg      unsigned char 
   904 ;; Registers used:
   905 ;;		wreg, status,2
   906 ;; Tracked objects:
   907 ;;		On entry : 0/0
   908 ;;		On exit  : 0/0
   909 ;;		Unchanged: 0/0
   910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   911 ;;      Params:         0       0       0       0       0       0       0
   912 ;;      Locals:         0       0       0       0       0       0       0
   913 ;;      Temps:          0       0       0       0       0       0       0
   914 ;;      Totals:         0       0       0       0       0       0       0
   915 ;;Total ram usage:        0 bytes
   916 ;; Hardware stack levels used:    1
   917 ;; This function calls:
   918 ;;		Nothing
   919 ;; This function is called by:
   920 ;;		_NRF24L01_ReadRegister
   921 ;;		_NRF24L01_ReadBuffer
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925                           	psect	text6
   926  000A6E                     __ptext6:
   927                           	opt stack 0
   928  000A6E                     _SPI1_Read:
   929                           	opt stack 28
   930                           
   931                           ;spi_pic18f.c: 52: SSPBUF = 0x00;
   932                           
   933                           ;incstack = 0
   934                           ;incstack = 0
   935  000A6E  0E00               	movlw	0
   936  000A70  6EC9               	movwf	4041,c	;volatile
   937  000A72                     l82:
   938  000A72  A0C7               	btfss	4039,0,c	;volatile
   939  000A74  D7FE               	goto	l82
   940                           
   941                           ;spi_pic18f.c: 54: return SSPBUF;
   942  000A76  50C9               	movf	4041,w,c	;volatile
   943  000A78  0012               	return	
   944  000A7A                     __end_of_SPI1_Read:
   945                           	opt stack 0
   946                           tblptru	equ	0xFF8
   947                           tblptrh	equ	0xFF7
   948                           tblptrl	equ	0xFF6
   949                           tablat	equ	0xFF5
   950                           postinc0	equ	0xFEE
   951                           indf1	equ	0xFE7
   952                           postdec1	equ	0xFE5
   953                           fsr1h	equ	0xFE2
   954                           fsr1l	equ	0xFE1
   955                           indf2	equ	0xFDF
   956                           fsr2h	equ	0xFDA
   957                           fsr2l	equ	0xFD9
   958                           status	equ	0xFD8
   959                           
   960 ;; *************** function _NRF24L01_Init *****************
   961 ;; Defined at:
   962 ;;		line 56 in file "nrf24l01.c"
   963 ;; Parameters:    Size  Location     Type
   964 ;;  mode            1    7[COMRAM] unsigned char 
   965 ;;  rf_channel      1    8[COMRAM] unsigned char 
   966 ;; Auto vars:     Size  Location     Type
   967 ;;		None
   968 ;; Return value:  Size  Location     Type
   969 ;;		None               void
   970 ;; Registers used:
   971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   972 ;; Tracked objects:
   973 ;;		On entry : 0/0
   974 ;;		On exit  : 0/0
   975 ;;		Unchanged: 0/0
   976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   977 ;;      Params:         2       0       0       0       0       0       0
   978 ;;      Locals:         0       0       0       0       0       0       0
   979 ;;      Temps:          2       0       0       0       0       0       0
   980 ;;      Totals:         4       0       0       0       0       0       0
   981 ;;Total ram usage:        4 bytes
   982 ;; Hardware stack levels used:    1
   983 ;; Hardware stack levels required when called:    3
   984 ;; This function calls:
   985 ;;		_NRF24L01_WriteRegister
   986 ;;		_NRF24L01_WriteBuffer
   987 ;;		_Delay_ms
   988 ;;		_NRF24L01_SetChannel
   989 ;;		_NRF24L01_SetMode
   990 ;; This function is called by:
   991 ;;		_main
   992 ;; This function uses a non-reentrant model
   993 ;;
   994                           
   995                           	psect	text7
   996  000626                     __ptext7:
   997                           	opt stack 0
   998  000626                     _NRF24L01_Init:
   999                           	opt stack 27
  1000                           
  1001                           ;nrf24l01.c: 57: TRISCbits.TRISC1 = 0; TRISCbits.TRISC0 = 0;
  1002                           
  1003                           ;incstack = 0
  1004                           ;incstack = 0
  1005  000626  9294               	bcf	3988,1,c	;volatile
  1006  000628  9094               	bcf	3988,0,c	;volatile
  1007                           
  1008                           ;nrf24l01.c: 58: LATCbits.LATC1 = 1; LATCbits.LATC0 = 0;
  1009  00062A  828B               	bsf	3979,1,c	;volatile
  1010  00062C  908B               	bcf	3979,0,c	;volatile
  1011                           
  1012                           ;nrf24l01.c: 59: Delay_ms(100);
  1013  00062E  0E00               	movlw	0
  1014  000630  6E02               	movwf	?_Delay_ms+1,c
  1015  000632  0E64               	movlw	100
  1016  000634  6E01               	movwf	?_Delay_ms,c
  1017  000636  ECCD  F004         	call	_Delay_ms	;wreg free
  1018                           
  1019                           ;nrf24l01.c: 60: NRF24L01_WriteRegister(0x00, 0x0A); Delay_ms(10);
  1020  00063A  6E0A               	movwf	??_NRF24L01_Init& (0+255),c
  1021  00063C  0E00               	movlw	0
  1022  00063E  6E02               	movwf	?_NRF24L01_WriteRegister,c
  1023  000640  500A               	movf	??_NRF24L01_Init& (0+255),w,c
  1024  000642  6E0B               	movwf	(??_NRF24L01_Init+1)& (0+255),c
  1025  000644  0E0A               	movlw	10
  1026  000646  6E03               	movwf	?_NRF24L01_WriteRegister+1,c
  1027  000648  500B               	movf	(??_NRF24L01_Init+1)& (0+255),w,c
  1028  00064A  ECFD  F004         	call	_NRF24L01_WriteRegister	;wreg free
  1029  00064E  0E00               	movlw	0
  1030  000650  6E02               	movwf	?_Delay_ms+1,c
  1031  000652  0E0A               	movlw	10
  1032  000654  6E01               	movwf	?_Delay_ms,c
  1033  000656  ECCD  F004         	call	_Delay_ms	;wreg free
  1034                           
  1035                           ;nrf24l01.c: 61: NRF24L01_WriteRegister(0x01, 0x01);
  1036  00065A  6E0A               	movwf	??_NRF24L01_Init& (0+255),c
  1037  00065C  0E01               	movlw	1
  1038  00065E  6E02               	movwf	?_NRF24L01_WriteRegister,c
  1039  000660  500A               	movf	??_NRF24L01_Init& (0+255),w,c
  1040  000662  6E0B               	movwf	(??_NRF24L01_Init+1)& (0+255),c
  1041  000664  0E01               	movlw	1
  1042  000666  6E03               	movwf	?_NRF24L01_WriteRegister+1,c
  1043  000668  500B               	movf	(??_NRF24L01_Init+1)& (0+255),w,c
  1044  00066A  ECFD  F004         	call	_NRF24L01_WriteRegister	;wreg free
  1045                           
  1046                           ;nrf24l01.c: 62: NRF24L01_WriteRegister(0x02, 0x01);
  1047  00066E  6E0A               	movwf	??_NRF24L01_Init& (0+255),c
  1048  000670  0E02               	movlw	2
  1049  000672  6E02               	movwf	?_NRF24L01_WriteRegister,c
  1050  000674  500A               	movf	??_NRF24L01_Init& (0+255),w,c
  1051  000676  6E0B               	movwf	(??_NRF24L01_Init+1)& (0+255),c
  1052  000678  0E01               	movlw	1
  1053  00067A  6E03               	movwf	?_NRF24L01_WriteRegister+1,c
  1054  00067C  500B               	movf	(??_NRF24L01_Init+1)& (0+255),w,c
  1055  00067E  ECFD  F004         	call	_NRF24L01_WriteRegister	;wreg free
  1056                           
  1057                           ;nrf24l01.c: 63: NRF24L01_WriteRegister(0x03, 0x03);
  1058  000682  6E0A               	movwf	??_NRF24L01_Init& (0+255),c
  1059  000684  0E03               	movlw	3
  1060  000686  6E02               	movwf	?_NRF24L01_WriteRegister,c
  1061  000688  500A               	movf	??_NRF24L01_Init& (0+255),w,c
  1062  00068A  6E0B               	movwf	(??_NRF24L01_Init+1)& (0+255),c
  1063  00068C  0E03               	movlw	3
  1064  00068E  6E03               	movwf	?_NRF24L01_WriteRegister+1,c
  1065  000690  500B               	movf	(??_NRF24L01_Init+1)& (0+255),w,c
  1066  000692  ECFD  F004         	call	_NRF24L01_WriteRegister	;wreg free
  1067                           
  1068                           ;nrf24l01.c: 64: NRF24L01_WriteRegister(0x04, 0x00);
  1069  000696  6E0A               	movwf	??_NRF24L01_Init& (0+255),c
  1070  000698  0E04               	movlw	4
  1071  00069A  6E02               	movwf	?_NRF24L01_WriteRegister,c
  1072  00069C  500A               	movf	??_NRF24L01_Init& (0+255),w,c
  1073  00069E  6E0B               	movwf	(??_NRF24L01_Init+1)& (0+255),c
  1074  0006A0  0E00               	movlw	0
  1075  0006A2  6E03               	movwf	?_NRF24L01_WriteRegister+1,c
  1076  0006A4  500B               	movf	(??_NRF24L01_Init+1)& (0+255),w,c
  1077  0006A6  ECFD  F004         	call	_NRF24L01_WriteRegister	;wreg free
  1078                           
  1079                           ;nrf24l01.c: 65: NRF24L01_SetChannel(rf_channel);
  1080  0006AA  C009  F004         	movff	NRF24L01_Init@rf_channel,?_NRF24L01_SetChannel
  1081  0006AE  EC1E  F005         	call	_NRF24L01_SetChannel	;wreg free
  1082                           
  1083                           ;nrf24l01.c: 66: NRF24L01_WriteRegister(0x06, 0x0E);
  1084  0006B2  6E0A               	movwf	??_NRF24L01_Init& (0+255),c
  1085  0006B4  0E06               	movlw	6
  1086  0006B6  6E02               	movwf	?_NRF24L01_WriteRegister,c
  1087  0006B8  500A               	movf	??_NRF24L01_Init& (0+255),w,c
  1088  0006BA  6E0B               	movwf	(??_NRF24L01_Init+1)& (0+255),c
  1089  0006BC  0E0E               	movlw	14
  1090  0006BE  6E03               	movwf	?_NRF24L01_WriteRegister+1,c
  1091  0006C0  500B               	movf	(??_NRF24L01_Init+1)& (0+255),w,c
  1092  0006C2  ECFD  F004         	call	_NRF24L01_WriteRegister	;wreg free
  1093                           
  1094                           ;nrf24l01.c: 68: NRF24L01_WriteBuffer(0x20 | 0x0A, ADDRESS_DATA_PIPE0, 5);
  1095  0006C6  6E0A               	movwf	??_NRF24L01_Init& (0+255),c
  1096  0006C8  0E2A               	movlw	42
  1097  0006CA  6E02               	movwf	?_NRF24L01_WriteBuffer,c
  1098  0006CC  500A               	movf	??_NRF24L01_Init& (0+255),w,c
  1099  0006CE  0E00               	movlw	high _ADDRESS_DATA_PIPE0
  1100  0006D0  6E04               	movwf	?_NRF24L01_WriteBuffer+2,c
  1101  0006D2  0E50               	movlw	low _ADDRESS_DATA_PIPE0
  1102  0006D4  6E03               	movwf	?_NRF24L01_WriteBuffer+1,c
  1103  0006D6  6E0B               	movwf	(??_NRF24L01_Init+1)& (0+255),c
  1104  0006D8  0E05               	movlw	5
  1105  0006DA  6E05               	movwf	?_NRF24L01_WriteBuffer+3,c
  1106  0006DC  500B               	movf	(??_NRF24L01_Init+1)& (0+255),w,c
  1107  0006DE  EC86  F004         	call	_NRF24L01_WriteBuffer	;wreg free
  1108                           
  1109                           ;nrf24l01.c: 69: NRF24L01_WriteBuffer(0x20 | 0x10, ADDRESS_DATA_PIPE0, 5);
  1110  0006E2  6E0A               	movwf	??_NRF24L01_Init& (0+255),c
  1111  0006E4  0E30               	movlw	48
  1112  0006E6  6E02               	movwf	?_NRF24L01_WriteBuffer,c
  1113  0006E8  500A               	movf	??_NRF24L01_Init& (0+255),w,c
  1114  0006EA  0E00               	movlw	high _ADDRESS_DATA_PIPE0
  1115  0006EC  6E04               	movwf	?_NRF24L01_WriteBuffer+2,c
  1116  0006EE  0E50               	movlw	low _ADDRESS_DATA_PIPE0
  1117  0006F0  6E03               	movwf	?_NRF24L01_WriteBuffer+1,c
  1118  0006F2  6E0B               	movwf	(??_NRF24L01_Init+1)& (0+255),c
  1119  0006F4  0E05               	movlw	5
  1120  0006F6  6E05               	movwf	?_NRF24L01_WriteBuffer+3,c
  1121  0006F8  500B               	movf	(??_NRF24L01_Init+1)& (0+255),w,c
  1122  0006FA  EC86  F004         	call	_NRF24L01_WriteBuffer	;wreg free
  1123                           
  1124                           ;nrf24l01.c: 70: NRF24L01_WriteRegister(0x11, 5);
  1125  0006FE  6E0A               	movwf	??_NRF24L01_Init& (0+255),c
  1126  000700  0E11               	movlw	17
  1127  000702  6E02               	movwf	?_NRF24L01_WriteRegister,c
  1128  000704  500A               	movf	??_NRF24L01_Init& (0+255),w,c
  1129  000706  6E0B               	movwf	(??_NRF24L01_Init+1)& (0+255),c
  1130  000708  0E05               	movlw	5
  1131  00070A  6E03               	movwf	?_NRF24L01_WriteRegister+1,c
  1132  00070C  500B               	movf	(??_NRF24L01_Init+1)& (0+255),w,c
  1133  00070E  ECFD  F004         	call	_NRF24L01_WriteRegister	;wreg free
  1134                           
  1135                           ;nrf24l01.c: 72: Delay_ms(100);
  1136  000712  0E00               	movlw	0
  1137  000714  6E02               	movwf	?_Delay_ms+1,c
  1138  000716  0E64               	movlw	100
  1139  000718  6E01               	movwf	?_Delay_ms,c
  1140  00071A  ECCD  F004         	call	_Delay_ms	;wreg free
  1141                           
  1142                           ;nrf24l01.c: 73: NRF24L01_SetMode(mode);
  1143  00071E  C008  F004         	movff	NRF24L01_Init@mode,?_NRF24L01_SetMode
  1144  000722  ECF8  F003         	call	_NRF24L01_SetMode	;wreg free
  1145                           
  1146                           ;nrf24l01.c: 74: Delay_ms(100);
  1147  000726  0E00               	movlw	0
  1148  000728  6E02               	movwf	?_Delay_ms+1,c
  1149  00072A  0E64               	movlw	100
  1150  00072C  6E01               	movwf	?_Delay_ms,c
  1151  00072E  ECCD  F004         	call	_Delay_ms	;wreg free
  1152  000732  0012               	return	
  1153  000734                     __end_of_NRF24L01_Init:
  1154                           	opt stack 0
  1155                           tblptru	equ	0xFF8
  1156                           tblptrh	equ	0xFF7
  1157                           tblptrl	equ	0xFF6
  1158                           tablat	equ	0xFF5
  1159                           postinc0	equ	0xFEE
  1160                           indf1	equ	0xFE7
  1161                           postdec1	equ	0xFE5
  1162                           fsr1h	equ	0xFE2
  1163                           fsr1l	equ	0xFE1
  1164                           indf2	equ	0xFDF
  1165                           fsr2h	equ	0xFDA
  1166                           fsr2l	equ	0xFD9
  1167                           status	equ	0xFD8
  1168                           
  1169 ;; *************** function _NRF24L01_SetMode *****************
  1170 ;; Defined at:
  1171 ;;		line 77 in file "nrf24l01.c"
  1172 ;; Parameters:    Size  Location     Type
  1173 ;;  mode            1    3[COMRAM] unsigned char 
  1174 ;; Auto vars:     Size  Location     Type
  1175 ;;		None
  1176 ;; Return value:  Size  Location     Type
  1177 ;;		None               void
  1178 ;; Registers used:
  1179 ;;		wreg, status,2, status,0, cstack
  1180 ;; Tracked objects:
  1181 ;;		On entry : 0/0
  1182 ;;		On exit  : 0/0
  1183 ;;		Unchanged: 0/0
  1184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1185 ;;      Params:         1       0       0       0       0       0       0
  1186 ;;      Locals:         0       0       0       0       0       0       0
  1187 ;;      Temps:          2       0       0       0       0       0       0
  1188 ;;      Totals:         3       0       0       0       0       0       0
  1189 ;;Total ram usage:        3 bytes
  1190 ;; Hardware stack levels used:    1
  1191 ;; Hardware stack levels required when called:    2
  1192 ;; This function calls:
  1193 ;;		_NRF24L01_WriteRegister
  1194 ;;		_NRF24L01_Flush
  1195 ;; This function is called by:
  1196 ;;		_NRF24L01_Init
  1197 ;;		_NRF24L01_SendData
  1198 ;; This function uses a non-reentrant model
  1199 ;;
  1200                           
  1201                           	psect	text8
  1202  0007F0                     __ptext8:
  1203                           	opt stack 0
  1204  0007F0                     _NRF24L01_SetMode:
  1205                           	opt stack 27
  1206                           
  1207                           ;nrf24l01.c: 78: NRF24L01_Flush();
  1208                           
  1209                           ;incstack = 0
  1210                           ;incstack = 0
  1211  0007F0  ECDF  F004         	call	_NRF24L01_Flush	;wreg free
  1212                           
  1213                           ;nrf24l01.c: 79: NRF24L01_WriteRegister(0x07, 0x70);
  1214  0007F4  6E05               	movwf	??_NRF24L01_SetMode& (0+255),c
  1215  0007F6  0E07               	movlw	7
  1216  0007F8  6E02               	movwf	?_NRF24L01_WriteRegister,c
  1217  0007FA  5005               	movf	??_NRF24L01_SetMode& (0+255),w,c
  1218  0007FC  6E06               	movwf	(??_NRF24L01_SetMode+1)& (0+255),c
  1219  0007FE  0E70               	movlw	112
  1220  000800  6E03               	movwf	?_NRF24L01_WriteRegister+1,c
  1221  000802  5006               	movf	(??_NRF24L01_SetMode+1)& (0+255),w,c
  1222  000804  ECFD  F004         	call	_NRF24L01_WriteRegister	;wreg free
  1223                           
  1224                           ;nrf24l01.c: 80: switch(mode)
  1225  000808  D018               	goto	l971
  1226  00080A                     l961:
  1227                           
  1228                           ;nrf24l01.c: 83: NRF24L01_WriteRegister(0x00, 0x0F);
  1229  00080A  6E05               	movwf	??_NRF24L01_SetMode& (0+255),c
  1230  00080C  0E00               	movlw	0
  1231  00080E  6E02               	movwf	?_NRF24L01_WriteRegister,c
  1232  000810  5005               	movf	??_NRF24L01_SetMode& (0+255),w,c
  1233  000812  6E06               	movwf	(??_NRF24L01_SetMode+1)& (0+255),c
  1234  000814  0E0F               	movlw	15
  1235  000816  6E03               	movwf	?_NRF24L01_WriteRegister+1,c
  1236  000818  5006               	movf	(??_NRF24L01_SetMode+1)& (0+255),w,c
  1237  00081A  ECFD  F004         	call	_NRF24L01_WriteRegister	;wreg free
  1238                           
  1239                           ;nrf24l01.c: 84: LATCbits.LATC0 = 1;
  1240  00081E  808B               	bsf	3979,0,c	;volatile
  1241                           
  1242                           ;nrf24l01.c: 85: break;
  1243  000820  D013               	goto	l140
  1244  000822                     l965:
  1245                           
  1246                           ;nrf24l01.c: 87: NRF24L01_WriteRegister(0x00, 0x0E);
  1247  000822  6E05               	movwf	??_NRF24L01_SetMode& (0+255),c
  1248  000824  0E00               	movlw	0
  1249  000826  6E02               	movwf	?_NRF24L01_WriteRegister,c
  1250  000828  5005               	movf	??_NRF24L01_SetMode& (0+255),w,c
  1251  00082A  6E06               	movwf	(??_NRF24L01_SetMode+1)& (0+255),c
  1252  00082C  0E0E               	movlw	14
  1253  00082E  6E03               	movwf	?_NRF24L01_WriteRegister+1,c
  1254  000830  5006               	movf	(??_NRF24L01_SetMode+1)& (0+255),w,c
  1255  000832  ECFD  F004         	call	_NRF24L01_WriteRegister	;wreg free
  1256                           
  1257                           ;nrf24l01.c: 88: LATCbits.LATC0 = 0;
  1258  000836  908B               	bcf	3979,0,c	;volatile
  1259                           
  1260                           ;nrf24l01.c: 89: break;
  1261  000838  D007               	goto	l140
  1262  00083A                     l971:
  1263  00083A  5004               	movf	NRF24L01_SetMode@mode,w,c
  1264                           
  1265                           ; Switch size 1, requested type "space"
  1266                           ; Number of cases is 2, Range of values is 1 to 2
  1267                           ; switch strategies available:
  1268                           ; Name         Instructions Cycles
  1269                           ; simple_byte            7     4 (average)
  1270                           ;	Chosen strategy is simple_byte
  1271  00083C  0A01               	xorlw	1	; case 1
  1272  00083E  B4D8               	btfsc	status,2,c
  1273  000840  D7E4               	goto	l961
  1274  000842  0A03               	xorlw	3	; case 2
  1275  000844  B4D8               	btfsc	status,2,c
  1276  000846  D7ED               	goto	l965
  1277  000848                     l140:
  1278  000848  0012               	return	
  1279  00084A                     __end_of_NRF24L01_SetMode:
  1280                           	opt stack 0
  1281                           tblptru	equ	0xFF8
  1282                           tblptrh	equ	0xFF7
  1283                           tblptrl	equ	0xFF6
  1284                           tablat	equ	0xFF5
  1285                           postinc0	equ	0xFEE
  1286                           indf1	equ	0xFE7
  1287                           postdec1	equ	0xFE5
  1288                           fsr1h	equ	0xFE2
  1289                           fsr1l	equ	0xFE1
  1290                           indf2	equ	0xFDF
  1291                           fsr2h	equ	0xFDA
  1292                           fsr2l	equ	0xFD9
  1293                           status	equ	0xFD8
  1294                           
  1295 ;; *************** function _NRF24L01_Flush *****************
  1296 ;; Defined at:
  1297 ;;		line 126 in file "nrf24l01.c"
  1298 ;; Parameters:    Size  Location     Type
  1299 ;;		None
  1300 ;; Auto vars:     Size  Location     Type
  1301 ;;		None
  1302 ;; Return value:  Size  Location     Type
  1303 ;;		None               void
  1304 ;; Registers used:
  1305 ;;		status,2, cstack
  1306 ;; Tracked objects:
  1307 ;;		On entry : 0/0
  1308 ;;		On exit  : 0/0
  1309 ;;		Unchanged: 0/0
  1310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1311 ;;      Params:         0       0       0       0       0       0       0
  1312 ;;      Locals:         0       0       0       0       0       0       0
  1313 ;;      Temps:          1       0       0       0       0       0       0
  1314 ;;      Totals:         1       0       0       0       0       0       0
  1315 ;;Total ram usage:        1 bytes
  1316 ;; Hardware stack levels used:    1
  1317 ;; Hardware stack levels required when called:    1
  1318 ;; This function calls:
  1319 ;;		_SPI_Write
  1320 ;; This function is called by:
  1321 ;;		_NRF24L01_SetMode
  1322 ;;		_NRF24L01_ReadData
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326                           	psect	text9
  1327  0009BE                     __ptext9:
  1328                           	opt stack 0
  1329  0009BE                     _NRF24L01_Flush:
  1330                           	opt stack 28
  1331                           
  1332                           ;nrf24l01.c: 127: LATCbits.LATC1 = 0;
  1333                           
  1334                           ;incstack = 0
  1335                           ;incstack = 0
  1336  0009BE  928B               	bcf	3979,1,c	;volatile
  1337                           
  1338                           ;nrf24l01.c: 128: SPI_Write(0xE1);
  1339  0009C0  6E02               	movwf	??_NRF24L01_Flush& (0+255),c
  1340  0009C2  0EE1               	movlw	225
  1341  0009C4  6E01               	movwf	?_SPI_Write,c
  1342  0009C6  5002               	movf	??_NRF24L01_Flush& (0+255),w,c
  1343  0009C8  EC30  F005         	call	_SPI_Write	;wreg free
  1344                           
  1345                           ;nrf24l01.c: 129: LATCbits.LATC1 = 1;
  1346  0009CC  828B               	bsf	3979,1,c	;volatile
  1347                           
  1348                           ;nrf24l01.c: 130: LATCbits.LATC1 = 0;
  1349  0009CE  928B               	bcf	3979,1,c	;volatile
  1350                           
  1351                           ;nrf24l01.c: 131: SPI_Write(0xE2);
  1352  0009D0  6E02               	movwf	??_NRF24L01_Flush& (0+255),c
  1353  0009D2  0EE2               	movlw	226
  1354  0009D4  6E01               	movwf	?_SPI_Write,c
  1355  0009D6  5002               	movf	??_NRF24L01_Flush& (0+255),w,c
  1356  0009D8  EC30  F005         	call	_SPI_Write	;wreg free
  1357                           
  1358                           ;nrf24l01.c: 132: LATCbits.LATC1 = 1;
  1359  0009DC  828B               	bsf	3979,1,c	;volatile
  1360  0009DE  0012               	return	
  1361  0009E0                     __end_of_NRF24L01_Flush:
  1362                           	opt stack 0
  1363                           tblptru	equ	0xFF8
  1364                           tblptrh	equ	0xFF7
  1365                           tblptrl	equ	0xFF6
  1366                           tablat	equ	0xFF5
  1367                           postinc0	equ	0xFEE
  1368                           indf1	equ	0xFE7
  1369                           postdec1	equ	0xFE5
  1370                           fsr1h	equ	0xFE2
  1371                           fsr1l	equ	0xFE1
  1372                           indf2	equ	0xFDF
  1373                           fsr2h	equ	0xFDA
  1374                           fsr2l	equ	0xFD9
  1375                           status	equ	0xFD8
  1376                           
  1377 ;; *************** function _NRF24L01_SetChannel *****************
  1378 ;; Defined at:
  1379 ;;		line 113 in file "nrf24l01.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;  rf_channel      1    3[COMRAM] unsigned char 
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;		None
  1384 ;; Return value:  Size  Location     Type
  1385 ;;		None               void
  1386 ;; Registers used:
  1387 ;;		wreg, status,2, status,0, cstack
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1393 ;;      Params:         1       0       0       0       0       0       0
  1394 ;;      Locals:         0       0       0       0       0       0       0
  1395 ;;      Temps:          1       0       0       0       0       0       0
  1396 ;;      Totals:         2       0       0       0       0       0       0
  1397 ;;Total ram usage:        2 bytes
  1398 ;; Hardware stack levels used:    1
  1399 ;; Hardware stack levels required when called:    2
  1400 ;; This function calls:
  1401 ;;		_NRF24L01_WriteRegister
  1402 ;; This function is called by:
  1403 ;;		_NRF24L01_Init
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407                           	psect	text10
  1408  000A3C                     __ptext10:
  1409                           	opt stack 0
  1410  000A3C                     _NRF24L01_SetChannel:
  1411                           	opt stack 27
  1412                           
  1413                           ;nrf24l01.c: 114: NRF24L01_WriteRegister(0x05, rf_channel);
  1414                           
  1415                           ;incstack = 0
  1416                           ;incstack = 0
  1417  000A3C  6E05               	movwf	??_NRF24L01_SetChannel& (0+255),c
  1418  000A3E  0E05               	movlw	5
  1419  000A40  6E02               	movwf	?_NRF24L01_WriteRegister,c
  1420  000A42  5005               	movf	??_NRF24L01_SetChannel& (0+255),w,c
  1421  000A44  C004  F003         	movff	NRF24L01_SetChannel@rf_channel,?_NRF24L01_WriteRegister+1
  1422  000A48  ECFD  F004         	call	_NRF24L01_WriteRegister	;wreg free
  1423  000A4C  0012               	return	
  1424  000A4E                     __end_of_NRF24L01_SetChannel:
  1425                           	opt stack 0
  1426                           tblptru	equ	0xFF8
  1427                           tblptrh	equ	0xFF7
  1428                           tblptrl	equ	0xFF6
  1429                           tablat	equ	0xFF5
  1430                           postinc0	equ	0xFEE
  1431                           indf1	equ	0xFE7
  1432                           postdec1	equ	0xFE5
  1433                           fsr1h	equ	0xFE2
  1434                           fsr1l	equ	0xFE1
  1435                           indf2	equ	0xFDF
  1436                           fsr2h	equ	0xFDA
  1437                           fsr2l	equ	0xFD9
  1438                           status	equ	0xFD8
  1439                           
  1440 ;; *************** function _NRF24L01_WriteRegister *****************
  1441 ;; Defined at:
  1442 ;;		line 14 in file "nrf24l01.c"
  1443 ;; Parameters:    Size  Location     Type
  1444 ;;  Mnemonic        1    1[COMRAM] unsigned char 
  1445 ;;  value           1    2[COMRAM] unsigned char 
  1446 ;; Auto vars:     Size  Location     Type
  1447 ;;		None
  1448 ;; Return value:  Size  Location     Type
  1449 ;;		None               void
  1450 ;; Registers used:
  1451 ;;		wreg, status,2, status,0, cstack
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1457 ;;      Params:         2       0       0       0       0       0       0
  1458 ;;      Locals:         0       0       0       0       0       0       0
  1459 ;;      Temps:          0       0       0       0       0       0       0
  1460 ;;      Totals:         2       0       0       0       0       0       0
  1461 ;;Total ram usage:        2 bytes
  1462 ;; Hardware stack levels used:    1
  1463 ;; Hardware stack levels required when called:    1
  1464 ;; This function calls:
  1465 ;;		_SPI_Write
  1466 ;; This function is called by:
  1467 ;;		_NRF24L01_Init
  1468 ;;		_NRF24L01_SetMode
  1469 ;;		_NRF24L01_ReadData
  1470 ;;		_NRF24L01_SetChannel
  1471 ;;		_NRF24L01_StandbyI
  1472 ;; This function uses a non-reentrant model
  1473 ;;
  1474                           
  1475                           	psect	text11
  1476  0009FA                     __ptext11:
  1477                           	opt stack 0
  1478  0009FA                     _NRF24L01_WriteRegister:
  1479                           	opt stack 28
  1480                           
  1481                           ;nrf24l01.c: 15: LATCbits.LATC1 = 0;
  1482                           
  1483                           ;incstack = 0
  1484                           ;incstack = 0
  1485  0009FA  928B               	bcf	3979,1,c	;volatile
  1486                           
  1487                           ;nrf24l01.c: 16: SPI_Write(0x20 | Mnemonic);
  1488  0009FC  5002               	movf	NRF24L01_WriteRegister@Mnemonic,w,c
  1489  0009FE  0920               	iorlw	32
  1490  000A00  6E01               	movwf	?_SPI_Write,c
  1491  000A02  EC30  F005         	call	_SPI_Write	;wreg free
  1492                           
  1493                           ;nrf24l01.c: 17: SPI_Write(value);
  1494  000A06  C003  F001         	movff	NRF24L01_WriteRegister@value,?_SPI_Write
  1495  000A0A  EC30  F005         	call	_SPI_Write	;wreg free
  1496                           
  1497                           ;nrf24l01.c: 18: LATCbits.LATC1 = 1;
  1498  000A0E  828B               	bsf	3979,1,c	;volatile
  1499  000A10  0012               	return	
  1500  000A12                     __end_of_NRF24L01_WriteRegister:
  1501                           	opt stack 0
  1502                           tblptru	equ	0xFF8
  1503                           tblptrh	equ	0xFF7
  1504                           tblptrl	equ	0xFF6
  1505                           tablat	equ	0xFF5
  1506                           postinc0	equ	0xFEE
  1507                           indf1	equ	0xFE7
  1508                           postdec1	equ	0xFE5
  1509                           fsr1h	equ	0xFE2
  1510                           fsr1l	equ	0xFE1
  1511                           indf2	equ	0xFDF
  1512                           fsr2h	equ	0xFDA
  1513                           fsr2l	equ	0xFD9
  1514                           status	equ	0xFD8
  1515                           
  1516 ;; *************** function _Delay_ms *****************
  1517 ;; Defined at:
  1518 ;;		line 10 in file "time_delay.c"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;  count           2    0[COMRAM] unsigned int 
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;  i               2    2[COMRAM] unsigned int 
  1523 ;; Return value:  Size  Location     Type
  1524 ;;		None               void
  1525 ;; Registers used:
  1526 ;;		wreg, status,2, status,0
  1527 ;; Tracked objects:
  1528 ;;		On entry : 0/0
  1529 ;;		On exit  : 0/0
  1530 ;;		Unchanged: 0/0
  1531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1532 ;;      Params:         2       0       0       0       0       0       0
  1533 ;;      Locals:         2       0       0       0       0       0       0
  1534 ;;      Temps:          0       0       0       0       0       0       0
  1535 ;;      Totals:         4       0       0       0       0       0       0
  1536 ;;Total ram usage:        4 bytes
  1537 ;; Hardware stack levels used:    1
  1538 ;; This function calls:
  1539 ;;		Nothing
  1540 ;; This function is called by:
  1541 ;;		_NRF24L01_Init
  1542 ;;		_NRF24L01_SendData
  1543 ;;		_NRF24L01_StandbyI
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547                           	psect	text12
  1548  00099A                     __ptext12:
  1549                           	opt stack 0
  1550  00099A                     _Delay_ms:
  1551                           	opt stack 29
  1552                           
  1553                           ;time_delay.c: 11: unsigned int i;
  1554                           ;time_delay.c: 12: for(i = 0; i < count; i++){
  1555                           
  1556                           ;incstack = 0
  1557                           ;incstack = 0
  1558  00099A  0E00               	movlw	0
  1559  00099C  6E04               	movwf	Delay_ms@i+1,c
  1560  00099E  0E00               	movlw	0
  1561  0009A0  6E03               	movwf	Delay_ms@i,c
  1562  0009A2  D006               	goto	l167
  1563  0009A4                     l925:
  1564                           
  1565                           ;time_delay.c: 13: _delay((unsigned long)((1)*(4000000/4000.0)));
  1566  0009A4  0EFA               	movlw	250
  1567  0009A6                     u187:
  1568  0009A6  F000               	nop	
  1569  0009A8  2EE8               	decfsz	wreg,f,c
  1570  0009AA  D7FD               	goto	u187
  1571  0009AC  4A03               	infsnz	Delay_ms@i,f,c
  1572  0009AE  2A04               	incf	Delay_ms@i+1,f,c
  1573  0009B0                     l167:
  1574  0009B0  5001               	movf	Delay_ms@count,w,c
  1575  0009B2  5C03               	subwf	Delay_ms@i,w,c
  1576  0009B4  5002               	movf	Delay_ms@count+1,w,c
  1577  0009B6  5804               	subwfb	Delay_ms@i+1,w,c
  1578  0009B8  B0D8               	btfsc	status,0,c
  1579  0009BA  0012               	return	
  1580  0009BC  D7F3               	goto	l925
  1581  0009BE                     __end_of_Delay_ms:
  1582                           	opt stack 0
  1583                           tblptru	equ	0xFF8
  1584                           tblptrh	equ	0xFF7
  1585                           tblptrl	equ	0xFF6
  1586                           tablat	equ	0xFF5
  1587                           postinc0	equ	0xFEE
  1588                           wreg	equ	0xFE8
  1589                           indf1	equ	0xFE7
  1590                           postdec1	equ	0xFE5
  1591                           fsr1h	equ	0xFE2
  1592                           fsr1l	equ	0xFE1
  1593                           indf2	equ	0xFDF
  1594                           fsr2h	equ	0xFDA
  1595                           fsr2l	equ	0xFD9
  1596                           status	equ	0xFD8
  1597                           
  1598 ;; *************** function _NRF24L01_WriteBuffer *****************
  1599 ;; Defined at:
  1600 ;;		line 30 in file "nrf24l01.c"
  1601 ;; Parameters:    Size  Location     Type
  1602 ;;  data            1    1[COMRAM] unsigned char 
  1603 ;;  buffer          2    2[COMRAM] PTR unsigned char 
  1604 ;;		 -> ADDRESS_DATA_PIPE0(5), 
  1605 ;;  bytes           1    4[COMRAM] unsigned char 
  1606 ;; Auto vars:     Size  Location     Type
  1607 ;;  i               1    6[COMRAM] unsigned char 
  1608 ;; Return value:  Size  Location     Type
  1609 ;;		None               void
  1610 ;; Registers used:
  1611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1612 ;; Tracked objects:
  1613 ;;		On entry : 0/0
  1614 ;;		On exit  : 0/0
  1615 ;;		Unchanged: 0/0
  1616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1617 ;;      Params:         4       0       0       0       0       0       0
  1618 ;;      Locals:         1       0       0       0       0       0       0
  1619 ;;      Temps:          1       0       0       0       0       0       0
  1620 ;;      Totals:         6       0       0       0       0       0       0
  1621 ;;Total ram usage:        6 bytes
  1622 ;; Hardware stack levels used:    1
  1623 ;; Hardware stack levels required when called:    1
  1624 ;; This function calls:
  1625 ;;		_SPI_Write
  1626 ;; This function is called by:
  1627 ;;		_NRF24L01_Init
  1628 ;;		_NRF24L01_SendData
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           	psect	text13
  1633  00090C                     __ptext13:
  1634                           	opt stack 0
  1635  00090C                     _NRF24L01_WriteBuffer:
  1636                           	opt stack 28
  1637                           
  1638                           ;nrf24l01.c: 31: unsigned char i;
  1639                           ;nrf24l01.c: 32: LATCbits.LATC1 = 0;
  1640                           
  1641                           ;incstack = 0
  1642                           ;incstack = 0
  1643  00090C  928B               	bcf	3979,1,c	;volatile
  1644                           
  1645                           ;nrf24l01.c: 33: SPI_Write(data);
  1646  00090E  C002  F001         	movff	NRF24L01_WriteBuffer@data,?_SPI_Write
  1647  000912  EC30  F005         	call	_SPI_Write	;wreg free
  1648                           
  1649                           ;nrf24l01.c: 34: for(i = 0; i < bytes; i++)
  1650  000916  6E06               	movwf	??_NRF24L01_WriteBuffer& (0+255),c
  1651  000918  0E00               	movlw	0
  1652  00091A  6E07               	movwf	NRF24L01_WriteBuffer@i,c
  1653  00091C  5006               	movf	??_NRF24L01_WriteBuffer& (0+255),w,c
  1654  00091E  D00B               	goto	l903
  1655  000920                     l897:
  1656                           
  1657                           ;nrf24l01.c: 35: {
  1658                           ;nrf24l01.c: 36: SPI_Write(*buffer);
  1659  000920  C003  FFD9         	movff	NRF24L01_WriteBuffer@buffer,fsr2l
  1660  000924  C004  FFDA         	movff	NRF24L01_WriteBuffer@buffer+1,fsr2h
  1661  000928  50DF               	movf	indf2,w,c
  1662  00092A  6E01               	movwf	?_SPI_Write,c
  1663  00092C  EC30  F005         	call	_SPI_Write	;wreg free
  1664                           
  1665                           ;nrf24l01.c: 37: buffer++;
  1666  000930  4A03               	infsnz	NRF24L01_WriteBuffer@buffer,f,c
  1667  000932  2A04               	incf	NRF24L01_WriteBuffer@buffer+1,f,c
  1668  000934  2A07               	incf	NRF24L01_WriteBuffer@i,f,c
  1669  000936                     l903:
  1670  000936  5005               	movf	NRF24L01_WriteBuffer@bytes,w,c
  1671  000938  5C07               	subwf	NRF24L01_WriteBuffer@i,w,c
  1672  00093A  A0D8               	btfss	status,0,c
  1673  00093C  D7F1               	goto	l897
  1674                           
  1675                           ;nrf24l01.c: 38: }
  1676                           ;nrf24l01.c: 39: LATCbits.LATC1 = 1;
  1677  00093E  828B               	bsf	3979,1,c	;volatile
  1678  000940  0012               	return	
  1679  000942                     __end_of_NRF24L01_WriteBuffer:
  1680                           	opt stack 0
  1681                           tblptru	equ	0xFF8
  1682                           tblptrh	equ	0xFF7
  1683                           tblptrl	equ	0xFF6
  1684                           tablat	equ	0xFF5
  1685                           postinc0	equ	0xFEE
  1686                           wreg	equ	0xFE8
  1687                           indf1	equ	0xFE7
  1688                           postdec1	equ	0xFE5
  1689                           fsr1h	equ	0xFE2
  1690                           fsr1l	equ	0xFE1
  1691                           indf2	equ	0xFDF
  1692                           fsr2h	equ	0xFDA
  1693                           fsr2l	equ	0xFD9
  1694                           status	equ	0xFD8
  1695                           
  1696 ;; *************** function _SPI_Write *****************
  1697 ;; Defined at:
  1698 ;;		line 44 in file "spi_pic18f.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;  data            1    0[COMRAM] unsigned char 
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;		None
  1703 ;; Return value:  Size  Location     Type
  1704 ;;		None               void
  1705 ;; Registers used:
  1706 ;;		None
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1712 ;;      Params:         1       0       0       0       0       0       0
  1713 ;;      Locals:         0       0       0       0       0       0       0
  1714 ;;      Temps:          0       0       0       0       0       0       0
  1715 ;;      Totals:         1       0       0       0       0       0       0
  1716 ;;Total ram usage:        1 bytes
  1717 ;; Hardware stack levels used:    1
  1718 ;; This function calls:
  1719 ;;		Nothing
  1720 ;; This function is called by:
  1721 ;;		_NRF24L01_WriteRegister
  1722 ;;		_NRF24L01_ReadRegister
  1723 ;;		_NRF24L01_WriteBuffer
  1724 ;;		_NRF24L01_ReadBuffer
  1725 ;;		_NRF24L01_Flush
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728                           
  1729                           	psect	text14
  1730  000A60                     __ptext14:
  1731                           	opt stack 0
  1732  000A60                     _SPI_Write:
  1733                           	opt stack 28
  1734                           
  1735                           ;spi_pic18f.c: 46: SSPBUF = data;
  1736                           
  1737                           ;incstack = 0
  1738                           ;incstack = 0
  1739  000A60  C001  FFC9         	movff	SPI_Write@data,4041	;volatile
  1740  000A64                     l76:
  1741  000A64  A0C7               	btfss	4039,0,c	;volatile
  1742  000A66  D7FE               	goto	l76
  1743                           
  1744                           ;spi_pic18f.c: 48: data = SSPBUF;
  1745  000A68  CFC9 F001          	movff	4041,SPI_Write@data	;volatile
  1746  000A6C  0012               	return	
  1747  000A6E                     __end_of_SPI_Write:
  1748                           	opt stack 0
  1749                           tblptru	equ	0xFF8
  1750                           tblptrh	equ	0xFF7
  1751                           tblptrl	equ	0xFF6
  1752                           tablat	equ	0xFF5
  1753                           postinc0	equ	0xFEE
  1754                           wreg	equ	0xFE8
  1755                           indf1	equ	0xFE7
  1756                           postdec1	equ	0xFE5
  1757                           fsr1h	equ	0xFE2
  1758                           fsr1l	equ	0xFE1
  1759                           indf2	equ	0xFDF
  1760                           fsr2h	equ	0xFDA
  1761                           fsr2l	equ	0xFD9
  1762                           status	equ	0xFD8
  1763                           
  1764 ;; *************** function _SPI_Init *****************
  1765 ;; Defined at:
  1766 ;;		line 16 in file "spi_pic18f.c"
  1767 ;; Parameters:    Size  Location     Type
  1768 ;;		None
  1769 ;; Auto vars:     Size  Location     Type
  1770 ;;		None
  1771 ;; Return value:  Size  Location     Type
  1772 ;;		None               void
  1773 ;; Registers used:
  1774 ;;		wreg, status,2
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1780 ;;      Params:         0       0       0       0       0       0       0
  1781 ;;      Locals:         0       0       0       0       0       0       0
  1782 ;;      Temps:          0       0       0       0       0       0       0
  1783 ;;      Totals:         0       0       0       0       0       0       0
  1784 ;;Total ram usage:        0 bytes
  1785 ;; Hardware stack levels used:    1
  1786 ;; This function calls:
  1787 ;;		Nothing
  1788 ;; This function is called by:
  1789 ;;		_main
  1790 ;; This function uses a non-reentrant model
  1791 ;;
  1792                           
  1793                           	psect	text15
  1794  000A28                     __ptext15:
  1795                           	opt stack 0
  1796  000A28                     _SPI_Init:
  1797                           	opt stack 30
  1798                           
  1799                           ;spi_pic18f.c: 17: TRISCbits.TRISC3 = 0; TRISCbits.TRISC5 = 0; TRISCbits.TRISC4 = 1; TRI
      +                          SAbits.TRISA5 = 0;
  1800                           
  1801                           ;incstack = 0
  1802                           ;incstack = 0
  1803  000A28  9694               	bcf	3988,3,c	;volatile
  1804  000A2A  9A94               	bcf	3988,5,c	;volatile
  1805  000A2C  8894               	bsf	3988,4,c	;volatile
  1806  000A2E  9A92               	bcf	3986,5,c	;volatile
  1807                           
  1808                           ;spi_pic18f.c: 18: SSPCON1bits.SSPEN=1;
  1809  000A30  8AC6               	bsf	4038,5,c	;volatile
  1810                           
  1811                           ;spi_pic18f.c: 21: SSPSTAT = 0xC0;
  1812  000A32  0EC0               	movlw	192
  1813  000A34  6EC7               	movwf	4039,c	;volatile
  1814                           
  1815                           ;spi_pic18f.c: 26: SSPCON1 = 0x21;
  1816  000A36  0E21               	movlw	33
  1817  000A38  6EC6               	movwf	4038,c	;volatile
  1818  000A3A  0012               	return	
  1819  000A3C                     __end_of_SPI_Init:
  1820                           	opt stack 0
  1821                           tblptru	equ	0xFF8
  1822                           tblptrh	equ	0xFF7
  1823                           tblptrl	equ	0xFF6
  1824                           tablat	equ	0xFF5
  1825                           postinc0	equ	0xFEE
  1826                           wreg	equ	0xFE8
  1827                           indf1	equ	0xFE7
  1828                           postdec1	equ	0xFE5
  1829                           fsr1h	equ	0xFE2
  1830                           fsr1l	equ	0xFE1
  1831                           indf2	equ	0xFDF
  1832                           fsr2h	equ	0xFDA
  1833                           fsr2l	equ	0xFD9
  1834                           status	equ	0xFD8
  1835                           
  1836 ;; *************** function _SPI_Close *****************
  1837 ;; Defined at:
  1838 ;;		line 40 in file "spi_pic18f.c"
  1839 ;; Parameters:    Size  Location     Type
  1840 ;;		None
  1841 ;; Auto vars:     Size  Location     Type
  1842 ;;		None
  1843 ;; Return value:  Size  Location     Type
  1844 ;;		None               void
  1845 ;; Registers used:
  1846 ;;		status,2, status,0
  1847 ;; Tracked objects:
  1848 ;;		On entry : 0/0
  1849 ;;		On exit  : 0/0
  1850 ;;		Unchanged: 0/0
  1851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1852 ;;      Params:         0       0       0       0       0       0       0
  1853 ;;      Locals:         0       0       0       0       0       0       0
  1854 ;;      Temps:          0       0       0       0       0       0       0
  1855 ;;      Totals:         0       0       0       0       0       0       0
  1856 ;;Total ram usage:        0 bytes
  1857 ;; Hardware stack levels used:    1
  1858 ;; This function calls:
  1859 ;;		Nothing
  1860 ;; This function is called by:
  1861 ;;		_main
  1862 ;; This function uses a non-reentrant model
  1863 ;;
  1864                           
  1865                           	psect	text16
  1866  000A8C                     __ptext16:
  1867                           	opt stack 0
  1868  000A8C                     _SPI_Close:
  1869                           	opt stack 30
  1870                           
  1871                           ;spi_pic18f.c: 41: SSPCON1 &= 0xDF;
  1872                           
  1873                           ;incstack = 0
  1874                           ;incstack = 0
  1875  000A8C  9AC6               	bcf	4038,5,c	;volatile
  1876  000A8E  0012               	return	
  1877  000A90                     __end_of_SPI_Close:
  1878                           	opt stack 0
  1879                           tblptru	equ	0xFF8
  1880                           tblptrh	equ	0xFF7
  1881                           tblptrl	equ	0xFF6
  1882                           tablat	equ	0xFF5
  1883                           postinc0	equ	0xFEE
  1884                           wreg	equ	0xFE8
  1885                           indf1	equ	0xFE7
  1886                           postdec1	equ	0xFE5
  1887                           fsr1h	equ	0xFE2
  1888                           fsr1l	equ	0xFE1
  1889                           indf2	equ	0xFDF
  1890                           fsr2h	equ	0xFDA
  1891                           fsr2l	equ	0xFD9
  1892                           status	equ	0xFD8
  1893                           
  1894 ;; *************** function _UART_String *****************
  1895 ;; Defined at:
  1896 ;;		line 46 in file "uart.c"
  1897 ;; Parameters:    Size  Location     Type
  1898 ;;  _string         2    1[COMRAM] PTR unsigned char 
  1899 ;;		 -> main@bufferRX(32), STR_1(36), 
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;		None
  1902 ;; Return value:  Size  Location     Type
  1903 ;;		None               void
  1904 ;; Registers used:
  1905 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1906 ;; Tracked objects:
  1907 ;;		On entry : 0/0
  1908 ;;		On exit  : 0/0
  1909 ;;		Unchanged: 0/0
  1910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1911 ;;      Params:         2       0       0       0       0       0       0
  1912 ;;      Locals:         0       0       0       0       0       0       0
  1913 ;;      Temps:          0       0       0       0       0       0       0
  1914 ;;      Totals:         2       0       0       0       0       0       0
  1915 ;;Total ram usage:        2 bytes
  1916 ;; Hardware stack levels used:    1
  1917 ;; Hardware stack levels required when called:    1
  1918 ;; This function calls:
  1919 ;;		_UARTPutChar
  1920 ;; This function is called by:
  1921 ;;		_main
  1922 ;; This function uses a non-reentrant model
  1923 ;;
  1924                           
  1925                           	psect	text17
  1926  00084A                     __ptext17:
  1927                           	opt stack 0
  1928  00084A                     _UART_String:
  1929                           	opt stack 29
  1930                           
  1931                           ;uart.c: 47: while(*_string!=0x00)UARTPutChar(*_string++);
  1932                           
  1933                           ;incstack = 0
  1934                           ;incstack = 0
  1935  00084A  D013               	goto	l871
  1936  00084C                     l867:
  1937  00084C  5002               	movf	UART_String@_string,w,c
  1938  00084E  6EF6               	movwf	tblptrl,c
  1939  000850  6EE9               	movwf	fsr0l,c
  1940  000852  0E05               	movlw	(high __ramtop+-1)
  1941  000854  6EEA               	movwf	fsr0h,c
  1942  000856  5003               	movf	UART_String@_string+1,w,c
  1943  000858  64EA               	cpfsgt	fsr0h,c
  1944  00085A  D003               	bra	u87
  1945  00085C  6EEA               	movwf	fsr0h,c
  1946  00085E  50EF               	movf	indf0,w,c
  1947  000860  D003               	bra	u80
  1948  000862                     u87:
  1949  000862  6EF7               	movwf	tblptrh,c
  1950  000864  0008               	tblrd		*
  1951  000866  50F5               	movf	tablat,w,c
  1952  000868                     u80:
  1953  000868  6E01               	movwf	?_UARTPutChar,c
  1954  00086A  EC3D  F005         	call	_UARTPutChar	;wreg free
  1955  00086E  4A02               	infsnz	UART_String@_string,f,c
  1956  000870  2A03               	incf	UART_String@_string+1,f,c
  1957  000872                     l871:
  1958  000872  5002               	movf	UART_String@_string,w,c
  1959  000874  6EF6               	movwf	tblptrl,c
  1960  000876  6EE9               	movwf	fsr0l,c
  1961  000878  0E05               	movlw	(high __ramtop+-1)
  1962  00087A  6EEA               	movwf	fsr0h,c
  1963  00087C  5003               	movf	UART_String@_string+1,w,c
  1964  00087E  64EA               	cpfsgt	fsr0h,c
  1965  000880  D003               	bra	u97
  1966  000882  6EEA               	movwf	fsr0h,c
  1967  000884  50EF               	movf	indf0,w,c
  1968  000886  D003               	bra	u90
  1969  000888                     u97:
  1970  000888  6EF7               	movwf	tblptrh,c
  1971  00088A  0008               	tblrd		*
  1972  00088C  50F5               	movf	tablat,w,c
  1973  00088E                     u90:
  1974  00088E  0900               	iorlw	0
  1975  000890  B4D8               	btfsc	status,2,c
  1976  000892  0012               	return	
  1977  000894  D7DB               	goto	l867
  1978  000896                     __end_of_UART_String:
  1979                           	opt stack 0
  1980                           tblptru	equ	0xFF8
  1981                           tblptrh	equ	0xFF7
  1982                           tblptrl	equ	0xFF6
  1983                           tablat	equ	0xFF5
  1984                           indf0	equ	0xFEF
  1985                           postinc0	equ	0xFEE
  1986                           fsr0h	equ	0xFEA
  1987                           fsr0l	equ	0xFE9
  1988                           wreg	equ	0xFE8
  1989                           indf1	equ	0xFE7
  1990                           postdec1	equ	0xFE5
  1991                           fsr1h	equ	0xFE2
  1992                           fsr1l	equ	0xFE1
  1993                           indf2	equ	0xFDF
  1994                           fsr2h	equ	0xFDA
  1995                           fsr2l	equ	0xFD9
  1996                           status	equ	0xFD8
  1997                           
  1998 ;; *************** function _UARTPutChar *****************
  1999 ;; Defined at:
  2000 ;;		line 38 in file "uart.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;  Dato            1    0[COMRAM] unsigned char 
  2003 ;; Auto vars:     Size  Location     Type
  2004 ;;		None
  2005 ;; Return value:  Size  Location     Type
  2006 ;;		None               void
  2007 ;; Registers used:
  2008 ;;		None
  2009 ;; Tracked objects:
  2010 ;;		On entry : 0/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2014 ;;      Params:         1       0       0       0       0       0       0
  2015 ;;      Locals:         0       0       0       0       0       0       0
  2016 ;;      Temps:          0       0       0       0       0       0       0
  2017 ;;      Totals:         1       0       0       0       0       0       0
  2018 ;;Total ram usage:        1 bytes
  2019 ;; Hardware stack levels used:    1
  2020 ;; This function calls:
  2021 ;;		Nothing
  2022 ;; This function is called by:
  2023 ;;		_UART_String
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027                           	psect	text18
  2028  000A7A                     __ptext18:
  2029                           	opt stack 0
  2030  000A7A                     _UARTPutChar:
  2031                           	opt stack 29
  2032                           
  2033                           ;uart.c: 39: PIR1bits.TXIF = 0;
  2034                           
  2035                           ;incstack = 0
  2036                           ;incstack = 0
  2037  000A7A  989E               	bcf	3998,4,c	;volatile
  2038                           
  2039                           ;uart.c: 41: TXREG = Dato;
  2040  000A7C  C001  FFAD         	movff	UARTPutChar@Dato,4013	;volatile
  2041  000A80                     l198:
  2042  000A80  B2AC               	btfsc	4012,1,c	;volatile
  2043  000A82  0012               	return	
  2044  000A84  D7FD               	goto	l198
  2045  000A86                     __end_of_UARTPutChar:
  2046                           	opt stack 0
  2047                           tblptru	equ	0xFF8
  2048                           tblptrh	equ	0xFF7
  2049                           tblptrl	equ	0xFF6
  2050                           tablat	equ	0xFF5
  2051                           indf0	equ	0xFEF
  2052                           postinc0	equ	0xFEE
  2053                           fsr0h	equ	0xFEA
  2054                           fsr0l	equ	0xFE9
  2055                           wreg	equ	0xFE8
  2056                           indf1	equ	0xFE7
  2057                           postdec1	equ	0xFE5
  2058                           fsr1h	equ	0xFE2
  2059                           fsr1l	equ	0xFE1
  2060                           indf2	equ	0xFDF
  2061                           fsr2h	equ	0xFDA
  2062                           fsr2l	equ	0xFD9
  2063                           status	equ	0xFD8
  2064                           
  2065 ;; *************** function _UARTInit *****************
  2066 ;; Defined at:
  2067 ;;		line 12 in file "uart.c"
  2068 ;; Parameters:    Size  Location     Type
  2069 ;;		None
  2070 ;; Auto vars:     Size  Location     Type
  2071 ;;		None
  2072 ;; Return value:  Size  Location     Type
  2073 ;;		None               void
  2074 ;; Registers used:
  2075 ;;		wreg, status,2
  2076 ;; Tracked objects:
  2077 ;;		On entry : 0/0
  2078 ;;		On exit  : 0/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2081 ;;      Params:         0       0       0       0       0       0       0
  2082 ;;      Locals:         0       0       0       0       0       0       0
  2083 ;;      Temps:          0       0       0       0       0       0       0
  2084 ;;      Totals:         0       0       0       0       0       0       0
  2085 ;;Total ram usage:        0 bytes
  2086 ;; Hardware stack levels used:    1
  2087 ;; This function calls:
  2088 ;;		Nothing
  2089 ;; This function is called by:
  2090 ;;		_main
  2091 ;; This function uses a non-reentrant model
  2092 ;;
  2093                           
  2094                           	psect	text19
  2095  000A4E                     __ptext19:
  2096                           	opt stack 0
  2097  000A4E                     _UARTInit:
  2098                           	opt stack 30
  2099                           
  2100                           ;uart.c: 18: SPBRG = 25;
  2101                           
  2102                           ;incstack = 0
  2103                           ;incstack = 0
  2104  000A4E  0E19               	movlw	25
  2105  000A50  6EAF               	movwf	4015,c	;volatile
  2106                           
  2107                           ;uart.c: 20: TRISCbits.TRISC6 = 1;
  2108  000A52  8C94               	bsf	3988,6,c	;volatile
  2109                           
  2110                           ;uart.c: 21: TRISCbits.TRISC7 = 1;
  2111  000A54  8E94               	bsf	3988,7,c	;volatile
  2112                           
  2113                           ;uart.c: 26: TXSTA = 0b00100100;
  2114  000A56  0E24               	movlw	36
  2115  000A58  6EAC               	movwf	4012,c	;volatile
  2116                           
  2117                           ;uart.c: 31: BAUDCONbits.BRG16 = 0;
  2118  000A5A  96B8               	bcf	4024,3,c	;volatile
  2119                           
  2120                           ;uart.c: 33: RCSTAbits.SPEN = 1;
  2121  000A5C  8EAB               	bsf	4011,7,c	;volatile
  2122  000A5E  0012               	return	
  2123  000A60                     __end_of_UARTInit:
  2124                           	opt stack 0
  2125                           tblptru	equ	0xFF8
  2126                           tblptrh	equ	0xFF7
  2127                           tblptrl	equ	0xFF6
  2128                           tablat	equ	0xFF5
  2129                           indf0	equ	0xFEF
  2130                           postinc0	equ	0xFEE
  2131                           fsr0h	equ	0xFEA
  2132                           fsr0l	equ	0xFE9
  2133                           wreg	equ	0xFE8
  2134                           indf1	equ	0xFE7
  2135                           postdec1	equ	0xFE5
  2136                           fsr1h	equ	0xFE2
  2137                           fsr1l	equ	0xFE1
  2138                           indf2	equ	0xFDF
  2139                           fsr2h	equ	0xFDA
  2140                           fsr2l	equ	0xFD9
  2141                           status	equ	0xFD8
  2142                           tblptru	equ	0xFF8
  2143                           tblptrh	equ	0xFF7
  2144                           tblptrl	equ	0xFF6
  2145                           tablat	equ	0xFF5
  2146                           indf0	equ	0xFEF
  2147                           postinc0	equ	0xFEE
  2148                           fsr0h	equ	0xFEA
  2149                           fsr0l	equ	0xFE9
  2150                           wreg	equ	0xFE8
  2151                           indf1	equ	0xFE7
  2152                           postdec1	equ	0xFE5
  2153                           fsr1h	equ	0xFE2
  2154                           fsr1l	equ	0xFE1
  2155                           indf2	equ	0xFDF
  2156                           fsr2h	equ	0xFDA
  2157                           fsr2l	equ	0xFD9
  2158                           status	equ	0xFD8
  2159                           
  2160                           	psect	rparam
  2161  0000                     tblptru	equ	0xFF8
  2162                           tblptrh	equ	0xFF7
  2163                           tblptrl	equ	0xFF6
  2164                           tablat	equ	0xFF5
  2165                           indf0	equ	0xFEF
  2166                           postinc0	equ	0xFEE
  2167                           fsr0h	equ	0xFEA
  2168                           fsr0l	equ	0xFE9
  2169                           wreg	equ	0xFE8
  2170                           indf1	equ	0xFE7
  2171                           postdec1	equ	0xFE5
  2172                           fsr1h	equ	0xFE2
  2173                           fsr1l	equ	0xFE1
  2174                           indf2	equ	0xFDF
  2175                           fsr2h	equ	0xFDA
  2176                           fsr2l	equ	0xFD9
  2177                           status	equ	0xFD8


Data Sizes:
    Strings     36
    Constant    0
    Data        5
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     79      84
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ?_strcpy	PTR unsigned char  size(2) Largest target is 32
		 -> main@bufferRX_TMP(COMRAM[32]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 32
		 -> main@bufferRX(COMRAM[32]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 32
		 -> main@bufferRX_TMP(COMRAM[32]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 32
		 -> main@bufferRX_TMP(COMRAM[32]), 

    UART_String@_string	PTR unsigned char  size(2) Largest target is 36
		 -> main@bufferRX(COMRAM[32]), STR_1(CODE[36]), 

    NRF24L01_ReadData@buffer	PTR unsigned char  size(2) Largest target is 32
		 -> main@bufferRX(COMRAM[32]), 

    NRF24L01_ReadBuffer@buffer	PTR unsigned char  size(2) Largest target is 32
		 -> main@bufferRX(COMRAM[32]), 

    NRF24L01_WriteBuffer@buffer	PTR unsigned char  size(2) Largest target is 5
		 -> ADDRESS_DATA_PIPE0(COMRAM[5]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 32
		 -> main@bufferRX_TMP(COMRAM[32]), 


Critical Paths under _main in COMRAM

    _main->_NRF24L01_Init
    _main->_NRF24L01_ReadData
    _NRF24L01_ReadData->_NRF24L01_ReadBuffer
    _NRF24L01_ReadBuffer->_SPI_Write
    _NRF24L01_DataReady->_NRF24L01_ReadRegister
    _NRF24L01_ReadRegister->_SPI_Write
    _NRF24L01_Init->_NRF24L01_WriteBuffer
    _NRF24L01_SetMode->_NRF24L01_WriteRegister
    _NRF24L01_Flush->_SPI_Write
    _NRF24L01_SetChannel->_NRF24L01_WriteRegister
    _NRF24L01_WriteRegister->_SPI_Write
    _NRF24L01_WriteBuffer->_SPI_Write
    _UART_String->_UARTPutChar

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                68    68      0     740
                                             11 COMRAM    68    68      0
                           _UARTInit
                        _UART_String
                          _SPI_Close
                           _SPI_Init
                      _NRF24L01_Init
                 _NRF24L01_DataReady
                  _NRF24L01_ReadData
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               6     2      4      50
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _NRF24L01_ReadData                                    4     2      2     165
                                              7 COMRAM     4     2      2
             _NRF24L01_WriteRegister
                _NRF24L01_ReadBuffer
                     _NRF24L01_Flush
 ---------------------------------------------------------------------------------
 (2) _NRF24L01_ReadBuffer                                  6     2      4      90
                                              1 COMRAM     6     2      4
                          _SPI_Write
                          _SPI1_Read
 ---------------------------------------------------------------------------------
 (1) _NRF24L01_DataReady                                   2     2      0      45
                                              3 COMRAM     2     2      0
              _NRF24L01_ReadRegister
 ---------------------------------------------------------------------------------
 (2) _NRF24L01_ReadRegister                                2     1      1      45
                                              1 COMRAM     2     1      1
                          _SPI_Write
                          _SPI1_Read
 ---------------------------------------------------------------------------------
 (3) _SPI1_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _NRF24L01_Init                                        4     2      2     315
                                              7 COMRAM     4     2      2
             _NRF24L01_WriteRegister
               _NRF24L01_WriteBuffer
                           _Delay_ms
                _NRF24L01_SetChannel
                   _NRF24L01_SetMode
 ---------------------------------------------------------------------------------
 (2) _NRF24L01_SetMode                                     3     2      1      75
                                              3 COMRAM     3     2      1
             _NRF24L01_WriteRegister
                     _NRF24L01_Flush
 ---------------------------------------------------------------------------------
 (2) _NRF24L01_Flush                                       1     1      0      15
                                              1 COMRAM     1     1      0
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (2) _NRF24L01_SetChannel                                  2     1      1      60
                                              3 COMRAM     2     1      1
             _NRF24L01_WriteRegister
 ---------------------------------------------------------------------------------
 (2) _NRF24L01_WriteRegister                               2     0      2      45
                                              1 COMRAM     2     0      2
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (2) _Delay_ms                                             4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _NRF24L01_WriteBuffer                                 6     2      4      75
                                              1 COMRAM     6     2      4
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (3) _SPI_Write                                            1     0      1      15
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _SPI_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Close                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_String                                          2     0      2      45
                                              1 COMRAM     2     0      2
                        _UARTPutChar
 ---------------------------------------------------------------------------------
 (2) _UARTPutChar                                          1     0      1      15
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _UARTInit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UARTInit
   _UART_String
     _UARTPutChar
   _SPI_Close
   _SPI_Init
   _NRF24L01_Init
     _NRF24L01_WriteRegister
       _SPI_Write
     _NRF24L01_WriteBuffer
       _SPI_Write
     _Delay_ms
     _NRF24L01_SetChannel
       _NRF24L01_WriteRegister
         _SPI_Write
     _NRF24L01_SetMode
       _NRF24L01_WriteRegister
         _SPI_Write
       _NRF24L01_Flush
         _SPI_Write
   _NRF24L01_DataReady
     _NRF24L01_ReadRegister
       _SPI_Write
       _SPI1_Read
   _NRF24L01_ReadData
     _NRF24L01_WriteRegister
       _SPI_Write
     _NRF24L01_ReadBuffer
       _SPI_Write
       _SPI1_Read
     _NRF24L01_Flush
       _SPI_Write
   _strcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     4F      54       1       66.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       4       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      54      15        0.0%
DATA                 0      0      58       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Fri Nov 16 05:33:49 2018

                    _SSPSTATbits 000FC7                               l50 07EE  
                             l82 0A72                               l76 0A64  
                             u80 0868                               u90 088E  
                             u87 0862                               u97 0888  
                    __CFG_BORV$0 000000                     __CFG_CP0$OFF 000000  
                   __CFG_CP1$OFF 000000                     __CFG_CP2$OFF 000000  
                   __CFG_CP3$OFF 000000                      __CFG_OSC$XT 000000  
                            l140 0848                              l147 09F8  
                            l167 09B0                              l198 0A80  
                            l903 0936                              l911 08AA  
                            l823 094C                              l825 0954  
                            l925 09A4                              l917 08BE  
                            l871 0872                              l961 080A  
                            l945 09F6                              l867 084C  
                            l971 083A                              l965 0822  
                            l897 0920                              l995 078E  
                   __CFG_CPB$OFF 000000                              u175 07C8  
                   __CFG_CPD$OFF 000000                              u187 09A6  
                            wreg 000FE8             _NRF24L01_WriteBuffer 090C  
                  _NRF24L01_Init 0626                     __CFG_LVP$OFF 000000  
                   __CFG_WDT$OFF 000000                             STR_1 0600  
__size_of_NRF24L01_WriteRegister 0018                             _main 0734  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           indf0 000FEF                             fsr0l 000FE9  
                           fsr2h 000FDA                             indf1 000FE7  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9                             start 0000  
                  __CFG_IESO$OFF 000000                    __CFG_MCLRE$ON 000000  
  NRF24L01_SetChannel@rf_channel 0004                   _NRF24L01_Flush 09BE  
           NRF24L01_ReadBuffer@i 0007        NRF24L01_ReadBuffer@buffer 0003  
                   main@bufferRX 0030                            ?_main 0001  
                          _SPBRG 000FAF                            _PORTA 000F80  
                          _PORTB 000F81                            _PORTC 000F82  
                          _PORTD 000F83                            _PORTE 000F84  
       NRF24L01_WriteBuffer@data 0002                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                          _TRISD 000F95                            _TRISE 000F96  
          ?_NRF24L01_WriteBuffer 0002                            _TXREG 000FAD  
                          _TXSTA 000FAC                    __CFG_PWRT$OFF 000000  
             __size_of_SPI1_Read 000C                    __CFG_WRT0$OFF 000000  
                  __CFG_WRT1$OFF 000000                    __CFG_WRT2$OFF 000000  
                  __CFG_WRT3$OFF 000000                   __CFG_EBTR0$OFF 000000  
                 __CFG_FCMEN$OFF 000000                   __CFG_EBTR1$OFF 000000  
                 __CFG_EBTR2$OFF 000000                   __CFG_EBTR3$OFF 000000  
                 ?_NRF24L01_Init 0008                 __end_of_UARTInit 0A60  
                  __CFG_WRTB$OFF 000000                    __CFG_WRTC$OFF 000000  
                  __CFG_WRTD$OFF 000000        __size_of_NRF24L01_SetMode 005A  
                 __CFG_EBTRB$OFF 000000                 __end_of_SPI_Init 0A3C  
                 __CFG_BOREN$OFF 000000                            tablat 000FF5  
             __size_of_SPI_Close 0004                            status 000FD8  
             __size_of_SPI_Write 000E                 __end_of_Delay_ms 09BE  
         __end_of_NRF24L01_Flush 09E0                  __initialization 0970  
                   __end_of_main 07F0               _NRF24L01_DataReady 09E0  
         _NRF24L01_WriteRegister 09FA     __size_of_NRF24L01_ReadBuffer 0040  
                         ??_main 000C                    __activetblptr 000002  
            ?_NRF24L01_DataReady 0001     __size_of_NRF24L01_SetChannel 0012  
                         _OSCCON 000FD3   __size_of_NRF24L01_ReadRegister 0016  
  __end_of_NRF24L01_ReadRegister 0A28                           _SSPBUF 000FC9  
           ??_NRF24L01_DataReady 0004                     ?_UARTPutChar 0001  
              __end_of_SPI1_Read 0A7A                   __CFG_XINST$OFF 000000  
                   ?_UART_String 0002                  ?_NRF24L01_Flush 0001  
                 __CFG_STVREN$ON 000000                    Delay_ms@count 0001  
              __end_of_SPI_Close 0A90                           _strcpy 0942  
         ??_NRF24L01_WriteBuffer 0006                __end_of_SPI_Write 0A6E  
                ??_NRF24L01_Init 000A                     __pdataCOMRAM 0050  
                   __mediumconst 0000                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
           NRF24L01_SetMode@mode 0004         NRF24L01_ReadBuffer@bytes 0005  
                     __accesstop 0080          __end_of__initialization 0990  
                __CFG_PBADEN$OFF 000000            NRF24L01_WriteBuffer@i 0007  
                 __pcstackCOMRAM 0001                        ?_UARTInit 0001  
                      ?_SPI_Init 0001                        ?_Delay_ms 0001  
               _NRF24L01_SetMode 07F0                 main@bufferRX_TMP 0010  
  NRF24L01_ReadRegister@Mnemonic 0002                       ??_UARTInit 0001  
                     ??_SPI_Init 0001                          ?_strcpy 0001  
                     ??_Delay_ms 0003                          _SSPCON1 000FC6  
                        _SSPSTAT 000FC7              _NRF24L01_ReadBuffer 0896  
                        __Hparam 0000                    SPI_Write@data 0001  
        ?_NRF24L01_WriteRegister 0002                          __Lparam 0000  
           __size_of_UARTPutChar 000C              _NRF24L01_SetChannel 0A3C  
           ?_NRF24L01_ReadBuffer 0002             __size_of_UART_String 004C  
                   __psmallconst 0600                          __pcinit 0970  
        NRF24L01_Init@rf_channel 0009                          __ramtop 0600  
                        __ptext0 0734                          __ptext1 0942  
                        __ptext2 08D6                          __ptext3 0896  
                        __ptext4 09E0                          __ptext5 0A12  
                        __ptext6 0A6E                          __ptext7 0626  
                        __ptext8 07F0                          __ptext9 09BE  
                __size_of_strcpy 002E             ?_NRF24L01_SetChannel 0004  
           end_of_initialization 0990                        Delay_ms@i 0003  
               ??_NRF24L01_Flush 0002                    __Lmediumconst 0000  
 __end_of_NRF24L01_WriteRegister 0A12                        _RCSTAbits 000FAB  
                        postdec1 000FE5                          postinc0 000FEE  
          ??_NRF24L01_ReadBuffer 0006                        _SPI1_Read 0A6E  
    NRF24L01_WriteRegister@value 0003                        _SPI_Close 0A8C  
                      _TRISAbits 000F92                        _TRISCbits 000F94  
        NRF24L01_ReadData@buffer 0008            ??_NRF24L01_SetChannel 0005  
                      _SPI_Write 0A60                NRF24L01_Init@mode 0008  
                      _TXSTAbits 000FAC       NRF24L01_ReadRegister@byte0 0003  
    __size_of_NRF24L01_DataReady 001A            _NRF24L01_ReadRegister 0A12  
       __end_of_NRF24L01_SetMode 084A                       ?_SPI1_Read 0001  
                    _BAUDCONbits 000FB8                    __pidataCOMRAM 0A86  
              __size_of_UARTInit 0012       NRF24L01_WriteBuffer@buffer 0003  
              __size_of_SPI_Init 0014                   __end_of_strcpy 0970  
            start_initialization 0970    __size_of_NRF24L01_WriteBuffer 0036  
                     ?_SPI_Close 0001            __end_of_NRF24L01_Init 0734  
                     ?_SPI_Write 0001                __size_of_Delay_ms 0024  
              _NRF24L01_ReadData 08D6               ?_NRF24L01_ReadData 0008  
               __CFG_LPT1OSC$OFF 000000              ??_NRF24L01_ReadData 000A  
                       ??_strcpy 0005          NRF24L01_ReadBuffer@data 0002  
            __end_of__stringdata 0624        __end_of_NRF24L01_ReadData 090C  
         ?_NRF24L01_ReadRegister 0002                __CFG_CCP2MX$PORTC 000000  
                    ??_SPI1_Read 0001                      __smallconst 0600  
                    ??_SPI_Close 0001               UART_String@_string 0002  
                    ??_SPI_Write 0002   NRF24L01_WriteRegister@Mnemonic 0002  
                       _LATCbits 000F8B                    ??_UARTPutChar 0002  
                  ??_UART_String 0004                         _PIR1bits 000F9E  
               __CFG_WDTPS$32768 000000                         _UARTInit 0A4E  
                       _SPI_Init 0A28                      __stringdata 0600  
                       _Delay_ms 099A                        copy_data0 0984  
      NRF24L01_WriteBuffer@bytes 0005       __size_of_NRF24L01_ReadData 0036  
    __end_of_NRF24L01_ReadBuffer 08D6                         __Hrparam 0000  
             _ADDRESS_DATA_PIPE0 0050                         __Lrparam 0000  
              ?_NRF24L01_SetMode 0004              __end_of_UARTPutChar 0A86  
             ??_NRF24L01_SetMode 0005              __end_of_UART_String 0896  
                UARTPutChar@Dato 0001      __end_of_NRF24L01_SetChannel 0A4E  
                       __ptext10 0A3C                         __ptext11 09FA  
                       __ptext12 099A                         __ptext13 090C  
                       __ptext14 0A60                         __ptext15 0A28  
                       __ptext16 0A8C                         __ptext17 084A  
                       __ptext18 0A7A                         __ptext19 0A4E  
                     strcpy@from 0003       __end_of_NRF24L01_DataReady 09FA  
                  __size_of_main 00BC     __end_of_NRF24L01_WriteBuffer 0942  
        __size_of_NRF24L01_Flush 0022                      _OSCTUNEbits 000F9B  
       ??_NRF24L01_WriteRegister 0004          ??_NRF24L01_ReadRegister 0003  
                    _UARTPutChar 0A7A                      _UART_String 084A  
         __size_of_NRF24L01_Init 010E                         strcpy@cp 0005  
                       strcpy@to 0001                      _SSPCON1bits 000FC6  
